<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Divengine Open Source]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://divengine.org/</link><image><url>https://divengine.org/lib/media/favicon.png</url><title>Divengine Open Source</title><link>https://divengine.org/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Wed, 29 Jan 2025 13:14:09 GMT</lastBuildDate><atom:link href="https://divengine.org/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Wed, 29 Jan 2025 13:13:11 GMT</pubDate><copyright><![CDATA[Divengine Software Solutions]]></copyright><ttl>60</ttl><dc:creator>Divengine Software Solutions</dc:creator><item><title><![CDATA[Div PHP Ajax Mapping]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://github.com/anuraghazra/github-readme-stats" rel="noopener nofollow" class="external-link" href="https://github.com/anuraghazra/github-readme-stats" target="_blank"></a><img alt="Readme Card" src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=ajaxmap&amp;show_owner=true&amp;rand=23" referrerpolicy="no-referrer"><br>
Library for JavaScript and PHP, that allow mapping the PHP functions, static methods of classes and arbitrary data. This class provides a simpler solution to return registered data without having to register a specific function.<br>Mapping PHP data, functions and methods in JavaScript<br>An open source library for JavaScript and PHP, that allow mapping the PHP functions, static methods of classes and arbitrary data when instance a JavaScript class.<br>With this class you can call a functions and methods via AJAX.<br>For example:<br>Server side:<br>server.php<br>&lt;?php

use divengine\ajaxmap;

function sum($x, $y){
  return $x + $y; 
}

class Enterprise{
  public static function getEmployees(){
      return [
        ["name" =&gt; "Thomas Hardy", "salary" =&gt; 1500],  
        ["name" =&gt; "Christina Berglund", "salary" =&gt; 1200] 
      ];  
    } 
}

// Server instance ...

$server = new ajaxmap(); 

// ... Add methods ...

$server-&gt;addMethod("sum"); 
$server-&gt;addClass("Enterprise); 

// ... and go!
$server-&gt;go(); 
<br>Client side:<br>index.html<br>&lt;script type = "text/javascript" src="ajaxmap.js"&gt;&lt;/script&gt;
&lt;script type = "text/javascript"&gt;
    var map = new ajaxmap("server.php");
    var sum = map.sum(20, 10);
    var employees = map.Enterprise.getEmployees();
    var firstEmployeeName = employees[0]['name'];
&lt;/script&gt;
]]></description><link>https://divengine.org/documentation/div-php-ajax-mapping/div-php-ajax-mapping.html</link><guid isPermaLink="false">Documentation/Div PHP Ajax Mapping/Div PHP Ajax Mapping.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 24 Feb 2024 02:18:29 GMT</pubDate><enclosure url="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=ajaxmap&amp;show_owner=true&amp;rand=23" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=ajaxmap&amp;show_owner=true&amp;rand=23"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Analogy with Java]]></title><description><![CDATA[ 
 <br>You actually can switch on enums, but you can't switch on Strings until Java 7. You might consider using polymorphic method dispatch with Java enums rather than an explicit switch. Note that enums are objects in Java, not just symbols for ints like they are in C/C++. You can have a method on an enum type, then instead of writing a switch, just call the method - one line of code: done!<br>public enum Temperature {
    HOT {
        @Override
        public void whatShouldIdo() {
            System.out.println("Drink a bear!");
        }
    },
    COLD {
        @Override
        public void whatShouldIdo() {
             System.out.println("Wear a coat!");
        }
    };

    public abstract void whatShouldIdo();
}

// ...

void aMethodSomewhere(final Temperature temperature) {
    doSomeStuff();
    temperature.whatShouldIdo(); // here is where the switch would be, now it's one line of code!
    doSomeOtherStuff();
}
<br>One of the nice things about this approach is that it is simply impossible to get certain types of errors. You can't miss a switch case (you can incorrectly implement a method for a particular constant, but there's nothing that will ever totally prevent that from happening!). There's no switch "default" to worry about. Also, I've seen code that puts enum constants into arrays and then indexes into the arrays - this opens the possibility of array index out of bounds exceptions - just use the enum! Java enums are very, very powerful. Learn all that you can about them to use them effectively.<br>Also note if you have several enum constants that all have the same behavior for a particular method (like days of the week, in which weekend days have the same behavior and the weekdays Tuesday through Thursday also share the same behavior), you can simply gather that shared code in an enum method that is not overridden by every constant (final protected) and then call that method from the appropriate methods. So, add "final protected void commonMethod() { ... }" and then the implementation of method() in each constant would just call commonMethod().<br>And.... what about PHP ? This is a similar solution ...<br>&lt;?php

abstract class Temperature extends divengine\enum {
  public function whatShouldIdo() {}
}

class HOT extends Temperature {
  public function whatShouldIdo() {
    echo "Drink a bear!";
  }
}

class COLD extends Temperature {
  public function whatShouldIdo() {
    echo "Wear a coat!";
  }
}

// ....

function someStuff(Temperature $t) {
  $t-&gt;whatShouldIdo();
}

someStuff( new HOT() );
]]></description><link>https://divengine.org/documentation/div-php-enum-solution/analogy-with-java.html</link><guid isPermaLink="false">Documentation/Div PHP Enum Solution/Analogy with Java.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:04:05 GMT</pubDate></item><item><title><![CDATA[Div PHP Enum Solution]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://github.com/anuraghazra/github-readme-stats" rel="noopener nofollow" class="external-link" href="https://github.com/anuraghazra/github-readme-stats" target="_blank"></a><img alt="Readme Card" src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=enum&amp;show_owner=true&amp;rand=23" referrerpolicy="no-referrer"><br>
This is a PHP Enum Solution using classes and type hinting.&nbsp;Also you can build a taxonomies of enums!<br>An enumeration type, "enum" for short, is a data type to categorise named values. Enums can be used instead of hard coded strings to represent, for example, the status of a blog post in a structured and typed way.<br>In July 2019, I wrote a gist searching a solution for this.<br><a rel="noopener nofollow" class="external-link" href="https://gist.github.com/rafageist/aef9825b7c935cdeb0c6187a2d363909/revisions" target="_blank">https://gist.github.com/rafageist/aef9825b7c935cdeb0c6187a2d363909/revisions</a><br>Then I convert the gist in a real project.&nbsp;<a rel="noopener nofollow" class="external-link" href="https://www.phpclasses.org/package/11366-PHP-Implement-enumerated-values-using-classes.html" target="_blank">https://www.phpclasses.org/package/11366-PHP-Implement-enumerated-values-using-classes.html</a><br><br>Before 8.1, PHP didn't have a native enum type, only a very basic SPL implementation (<a rel="noopener nofollow" class="external-link" href="https://www.php.net/manual/en/class.splenum.php" target="_blank">https://www.php.net/manual/en/class.splenum.php</a>), but this really doesn't cut the mustard.&nbsp;Some solutions using constants, but not resolve the problem. How to validate HOT or COLD ?<br>&lt;?php

const HOT = 1;
const COLD = 2;

const FIRE = 1;
const ICE = 2;

function doSomething(int $temperature) { /* ... */}

doSomething(FIRE);
<br>From 8.1, PHP have a enums implementation (<a rel="noopener nofollow" class="external-link" href="https://www.php.net/manual/en/language.types.enumerations.php" target="_blank">https://www.php.net/manual/en/language.types.enumerations.php</a>).&nbsp;And now you can combine this solution with the new features of PHP.<br>There's a popular package called&nbsp;myclabs/php-enum. It's really awesome, but have a problem because we lose static analysis benefits like auto completion and refactoring.<br><br>Use PHP!<br>The class&nbsp;divengine\enum&nbsp;help you, but remember:&nbsp;the most important solution is the concept of this library.<br>With this class, you can solves the following problems:<br>
<br>Constants with different names and equal value can be used as function arguments
<br>Lose static analysis benefits like auto completion and refactoring
<br>Maintaining duplicated code when use docblock type hints to solve the first problem
<br>We need have built-in enums in PHP ! But, for now, this is a solution.<br><br>Composer:<br>composer require divengine\enum;
<br>Manual:<br>Clone the repo:<br>git clone https://github.com/divengine/enum
<br>Include the lib:<br>include "/path/to/divengine/enum/src/folder/enum.php";
<br><a data-href="Example of Div PHP Enum" href="https://divengine.org/documentation/div-php-enum-solution/example-of-div-php-enum.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Example of Div PHP Enum</a><br>
<a data-href="Analogy with Java" href="https://divengine.org/documentation/div-php-enum-solution/analogy-with-java.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Analogy with Java</a>]]></description><link>https://divengine.org/documentation/div-php-enum-solution/div-php-enum-solution.html</link><guid isPermaLink="false">Documentation/Div PHP Enum Solution/Div PHP Enum Solution.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 24 Feb 2024 02:18:08 GMT</pubDate><enclosure url="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=enum&amp;show_owner=true&amp;rand=23" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=enum&amp;show_owner=true&amp;rand=23"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Example of Div PHP Enum]]></title><description><![CDATA[ 
 <br>First, define your enums. You can build a taxonomy !!!:<br>Enums.php<br>&lt;?php

namespace MyEnums;

use divengine\enum;

class Temperature extends enum {/* Father of all types of temperatures */}
class ExtremeTemperature extends Temperature {/* Father of all types of extreme temperatures */}
class FIRE extends ExtremeTemperature {}
class ICE extends ExtremeTemperature {}

class NormalTemperature extends Temperature {/* Father of all types of normal temperatures */}
class HOT extends NormalTemperature {}
class COOL extends NormalTemperature {}
class COLD extends NormalTemperature {}
<br>Second, use your enums:<br>&lt;?php

use MyEnums;


// Constants are good tricks, but optional
const COOL = COOL::class;

class AllTemperatures {
    const COOL = COOL::class; // maybe better
    const HOT = 'Enums\\HOT';  // ugly !!!

    //...
}

// Define some function with type hinting
function WhatShouldIdo(Temperature $temperature)
{
    switch (true) {
        case $temperature instanceof ExtremeTemperature:
            switch (true) {
                case $temperature instanceof FIRE:
                    return "Call the fire department";

                case $temperature instanceof ICE:
                    return "Warm up";
            }
            break;

        case $temperature instanceof NormalTemperature:
            switch ($temperature) {

                case HOT::class: // compare using classname
                    return "Drink a beer :D";

                case COOL or AllTemperatures::COOL: // compare using constants
                    return "Just go away !";

                case 'Enums\\COLD': // compare using string, ugly !!!
                    return "Wear a coat";
            }

            break;
    }

    return "I don't know";
}

// Call to function with a instance of any Temperature
echo WhatShouldIdo(new HOT()) . PHP_EOL;
]]></description><link>https://divengine.org/documentation/div-php-enum-solution/example-of-div-php-enum.html</link><guid isPermaLink="false">Documentation/Div PHP Enum Solution/Example of Div PHP Enum.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:03:21 GMT</pubDate></item><item><title><![CDATA[Best practices]]></title><description><![CDATA[ 
 <br><br>When defining and reading constants with laze, it's recommended to define the name of each Lazy constant in a separate constant. This practice helps avoid hardcoding strings throughout your code and makes your constants easier to manage and update. For example:<br>// Define the constant name separately:
define('C_MAX_USERS', 'MAX_USERS');

// Use it with Laze:
Laze::define(C_MAX_USERS, function() {
    return getMaxUsersFromConfig();
});

You can also use a more descriptive name:
<br>// Define with a more descriptive name:
define('C_MAX_USERS', 'global.constants.max_users');

// Use it with Laze:
Laze::define(C_MAX_USERS, function() {
    return getMaxUsersFromConfig();
});
<br>By using separate constants for Lazy constant names, you enhance code clarity, maintainability, and reduce the risk of errors.<br><br>If you attempt to read a constant with Laze that has not been defined, an exception will be thrown, ensuring strict constant management. This behavior is intentional to prevent undefined or incorrectly defined constants from causing errors in your application. Here’s how it works:<br>
try {
    $maxUsers = Laze::read(C_MAX_USERS);
} catch (\Exception $e) {
    // Handle the undefined constant scenario
    echo $e-&gt;getMessage();
}
<br>In this example, if C_MAX_USERS has not been defined using laze::define, an exception will be raised with a message like "Undefined lazy constant: MAX_USERS". Always ensure that constants are properly defined before attempting to read them to avoid such exceptions.]]></description><link>https://divengine.org/documentation/div-php-laze/best-practices.html</link><guid isPermaLink="false">Documentation/Div PHP Laze/Best practices.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 11 Aug 2024 15:45:17 GMT</pubDate></item><item><title><![CDATA[Div PHP Laze]]></title><description><![CDATA[ 
 <br>laze is a PHP library designed for defining lazy evaluation. Values are set as closures and only materialize upon first access, ensuring efficient and controlled initialization. Once a closure function is evaluated, it becomes immutable and cannot be redefined as a different value. However, it can be redefined as a closure until it’s accessed, at which point it transforms into a non-closure value.<br>laze might be an English word that suggests relaxation or laziness, but in this context, it’s actually an acronym derived from Lazy Evaluation. This refers to a programming technique where the evaluation of an expression is delayed until its value is needed. With laze, once the value is evaluated, it becomes an immutable value. In other words, a value that, although evaluated with delay, cannot be modified after its initial evaluation. Thus, laze encapsulates the concept of deferred evaluation that results in a definitive value, combining flexibility and robustness into one concept.<br><br><a data-href="Installation" href="https://divengine.org/documentation/div-php-laze/installation.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Installation</a><br><br><br>To define a lazy constant, use the laze::define method. The value must be provided as a closure.<br>
  

use divengine\laze;

  

// Define a lazy constant

laze::define('MY_CONSTANT', fn() =&gt; computeExpensiveValue());

<br><br>To access the value, use the Laze::read method. The closure will be evaluated on the first access, and the result will be stored as the constant's value.<br>
$value = laze::read('MY_CONSTANT');

<br><br>
use divengine\laze;

  

// Define a lazy constant. Simulate an expensive computation

laze::define('MY_CONSTANT', fn() =&gt; return rand(1, 100));

  

// First access, the closure is evaluated

$value = laze::read('MY_CONSTANT');

echo $value; // Outputs the evaluated value

  

// Subsequent access returns the stored value

$value = laze::read('MY_CONSTANT');

echo $value; // Outputs the same value as before

<br><br>laze can be particularly useful in testing environments where you need to redefine values differently from their production values. This example demonstrates how to define a lazy value in a standard PHP file and then override it during unit tests.<br><br>In your index.php file, define a lazy constant using laze::define and create a function that uses this constant.<br>
use divengine\laze;

  

require_once 'vendor/autoload.php';

  

// Define a lazy constant

laze::define('GREETING', fn() =&gt; 'Hello, World!');

  

// Function that uses the lazy constant

function getGreeting()

{

    return laze::read('GREETING');

}

<br><br>Create a bootstrap.php file in your tests directory. This file will be loaded before any tests are executed, allowing you to redefine the constant GREETING for testing purposes.<br>
use divengine\laze;

  

require_once __DIR__ . '/../index.php';

  

// Redefine the constant `GREETING` only in the test context

laze::define('GREETING', fn() =&gt; 'Hello, PHPUnit!');

<br><br>In your tests/LazeTest.php, write tests to ensure that the constant behaves as expected both in normal and test contexts.<br>
use PHPUnit\Framework\TestCase;

  

class LazeTest extends TestCase

{

    public function testGreeting()

    {

        // Verify that the function getGreeting returns the redefined constant

        $this-&gt;assertEquals('Hello, PHPUnit!', getGreeting());

    }

  

    public function testOriginalGreeting()

    {

        // Check behavior without the PHPUnit bootstrap context

        // Run this without the PHPUnit bootstrap to see the difference

        $this-&gt;assertEquals('Hello, World!', getGreeting());

    }

}

  

<br><br>Ensure that your phpunit.xml is configured to include the bootstrap file:<br>
&lt;phpunit bootstrap="tests/bootstrap.php"&gt;

    &lt;testsuites&gt;

        &lt;testsuite name="Laze Test Suite"&gt;

            &lt;directory&gt;./tests&lt;/directory&gt;

        &lt;/testsuite&gt;

    &lt;/testsuites&gt;

&lt;/phpunit&gt;

<br><br>You can run the tests using the following command:<br>
phpunit

<br><br>
<br>
In the test environment, getGreeting() will return Hello, PHPUnit!, as the constant GREETING has been redefined.

<br>
In a normal (non-test) environment, getGreeting() will return Hello, World!, using the original definition.

<br>This approach allows you to test your application with different constant values without affecting the production code, providing a powerful way to manage test scenarios with laze.<br><br>This project is licensed under the GNU GENERAL PUBLIC LICENSE. See the LICENSE file for details.<br><br>Contributions are welcome! Please feel free to submit a Pull Request or open an Issue.<br><br>laze is developed and maintained by <a data-tooltip-position="top" aria-label="https://divengine.com" rel="noopener nofollow" class="external-link" href="https://divengine.com" target="_blank">Divengine Software Solutions</a>. If you find this library useful, please consider starring the repository and sharing it with others.]]></description><link>https://divengine.org/documentation/div-php-laze/div-php-laze.html</link><guid isPermaLink="false">Documentation/Div PHP Laze/Div PHP Laze.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Wed, 29 Jan 2025 13:11:27 GMT</pubDate></item><item><title><![CDATA[Installation]]></title><description><![CDATA[ 
 <br>You can install laze using Composer:<br>
composer require divengine/laze

<br>Or add it to your composer.json file:<br>{
    "require": {
        "divengine/laze": "^1.0.0"
    }
}
]]></description><link>https://divengine.org/documentation/div-php-laze/installation.html</link><guid isPermaLink="false">Documentation/Div PHP Laze/Installation.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 11 Aug 2024 15:46:15 GMT</pubDate></item><item><title><![CDATA[Simple matrix]]></title><description><![CDATA[ 
 <br><br>&lt;?php

include "matrix.php";

use divengine\matrix;

// simple list of nums
$nums = new matrix([
    ["", 1, 2, 3],
    ["", 4, 5, 6]
]);

// get item
echo $nums-&gt;get(1, 3); // 6

// set item
$nums-&gt;set(1, 3, 10);

echo $nums-&gt;formatTXT();
]]></description><link>https://divengine.org/documentation/div-php-matrix/features/simple-matrix.html</link><guid isPermaLink="false">Documentation/Div PHP Matrix/Features/Simple matrix.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Thu, 01 Feb 2024 15:12:03 GMT</pubDate></item><item><title><![CDATA[Div PHP Matrix]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://github.com/anuraghazra/github-readme-stats" rel="noopener nofollow" class="external-link" href="https://github.com/anuraghazra/github-readme-stats" target="_blank"></a><img alt="Readme Card" src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=matrix&amp;show_owner=true&amp;rand=23" referrerpolicy="no-referrer"><br>
This dynamic matrix manipulation class in PHP goes beyond conventional operations, offering dynamic calculations and diverse output formats for versatile applications.<br>It introduces a layer of dynamic logic where cells execute functions, allowing for flexible backend logic. The true power lies in crafting robust backend logic, akin to spreadsheet functionalities tailored for web development. Automatic recalculation is notable, but its strength lies in facilitating complex business logic.<br>Consider it as a tool for architecting backend logic using a spreadsheet-like paradigm. Dynamic calculations create interconnected matrices, triggering logical events across cells and matrices seamlessly.<br>The library empowers developers to create responsive systems, adapting to user interactions. Exporting data in various formats, including XML and JSON, extends its utility in web development.<br>A cell's ability to execute dynamic logic is a game-changer, allowing intricate and adaptable behavior defined by a function. Activating or deactivating cells opens possibilities to tailor business logic on-the-fly.<br>In essence, Div PHP Matrix Library not only facilitates dynamic recalculations but empowers adaptive backend logic. Its fluid response, driven by cell activation and deactivation, showcases potential in crafting dynamic applications.<br>The library seamlessly integrates with other divengine/* projects (div, ways, nodes, ajaxmap &amp; orm), forming a comprehensive and non-obtrusive toolkit for PHP developers, enhancing dynamic backend capabilities.]]></description><link>https://divengine.org/documentation/div-php-matrix/div-php-matrix.html</link><guid isPermaLink="false">Documentation/Div PHP Matrix/Div PHP Matrix.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 24 Feb 2024 02:17:49 GMT</pubDate><enclosure url="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=matrix&amp;show_owner=true&amp;rand=23" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=matrix&amp;show_owner=true&amp;rand=23"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Getting started]]></title><description><![CDATA[ 
 <br><br>composer require divengine/matrix
]]></description><link>https://divengine.org/documentation/div-php-matrix/getting-started.html</link><guid isPermaLink="false">Documentation/Div PHP Matrix/Getting started.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Wed, 31 Jan 2024 04:46:28 GMT</pubDate></item><item><title><![CDATA[Matrix features]]></title><description><![CDATA[ 
 <br><a data-href="Simple matrix" href="https://divengine.org/documentation/div-php-matrix/features/simple-matrix.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Simple matrix</a>]]></description><link>https://divengine.org/documentation/div-php-matrix/matrix-features.html</link><guid isPermaLink="false">Documentation/Div PHP Matrix/Matrix features.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Wed, 31 Jan 2024 04:43:50 GMT</pubDate></item><item><title><![CDATA[Div PHP ORM]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://github.com/anuraghazra/github-readme-stats" rel="noopener nofollow" class="external-link" href="https://github.com/anuraghazra/github-readme-stats" target="_blank"></a><img alt="Readme Card" src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=orm&amp;show_owner=true&amp;rand=23" referrerpolicy="no-referrer"><br>
This class allow to you make a mapping between your database objects and your PHP objects. You can implement your model inheriting from divengine\orm. Look at the following example as it implements a hierarchy of classes (scheme, map, collection, entitlement) and all inherit from the same divengine\orm class.<br>&lt;?php 

use divengine\orm; 

class PublicMap extends orm
{
    protected $__map_type = self::SCHEMA;
    protected $__map_schema = 'public';
    protected $__map_identity = 'id = :id';
}  

class PersonMap extends PublicMap
{
    protected $__map_type = self::RECORD;
    protected $__map_name = 'person';
    protected $__map_class = Person::class;
}

class Person extends PersonMap {
    private $id = self::AUTOMATIC;
    private $name;
    public function getId() {
        return $this-&gt;id;
    }

	public function setId($id) {
        $this-&gt;id = $id;
    } 

    public function getName() {
        return $this-&gt;name;
    }

    public function setName($name) {
        $this-&gt;name = $name;
    }
}

class PersonCollection extends PersonMap {
    protected $__map_type = self::TABLE;
}  

<br>Now look at an example of how to use your model:<br>&lt;?php  

use divengine\orm;

$pdo = new PDO(); // or use orm::buildPDO();
orm::connectGlobal($pdo); // or pass true to second param of orm::buildPDO()

$person = new Person(['name' =&gt; 'Peter']);
// $person::connect($pdo);

$person-&gt;insert();

$list = new PersonCollection();
$list-&gt;addItem($person);

$entity = $list-&gt;getFirstItem('id = ?', [100]);
]]></description><link>https://divengine.org/documentation/div-php-orm/div-php-orm.html</link><guid isPermaLink="false">Documentation/Div PHP ORM/Div PHP ORM.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 24 Feb 2024 02:17:32 GMT</pubDate><enclosure url="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=orm&amp;show_owner=true&amp;rand=23" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=orm&amp;show_owner=true&amp;rand=23"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Appendix A - Allowed PHP functions]]></title><description><![CDATA[ 
 <br>These are the PHP functions that can be used in&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-allowed-php-functions#conditions" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-allowed-php-functions#conditions" target="_blank">conditions</a>,&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-allowed-php-functions#formulas" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-allowed-php-functions#formulas" target="_blank">formulas</a>&nbsp;and another expressions in the templates:<br>]]></description><link>https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-a-allowed-php-functions.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Appendixes/Appendix A - Allowed PHP functions.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:34:14 GMT</pubDate></item><item><title><![CDATA[Appendix B - Comparison of syntax of Smarty and Div]]></title><description><![CDATA[ 
 <br><br>Smarty:<br>{foreach $foo as $bar}
	  &lt;a href="{$bar.zig}"&gt;{$bar.zag}&lt;/a&gt;
	  &lt;a href="{$bar.zig2}"&gt;{$bar.zag2}&lt;/a&gt;
	  &lt;a href="{$bar.zig3}"&gt;{$bar.zag3}&lt;/a&gt;
	{foreachelse}
	  There were no rows found
{/foreach}
<br>Div:<br>[$foo]
  &lt;a href="{$zig}"&gt;{$zag}&lt;/a&gt;
  &lt;a href="{$zig2}"&gt;{$zag2}&lt;/a&gt;
  &lt;a href="{$zig3}"&gt;{$zag3}&lt;/a&gt;
@empty@
  There were no rows found
[/$foo]
<br><br>Smarty:<br>{include file="header.tpl"}
<br>Div:<br>(% header %}
<br><br>Smarty:<br>{for $x = 1 to 20 step 2}
	  {$x}
{/for}
<br>Div:<br>[:1,20,x,2:]
	  {$x} 
[/]
]]></description><link>https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-b-comparison-of-syntax-of-smarty-and-div.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Appendixes/Appendix B - Comparison of syntax of Smarty and Div.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:54:39 GMT</pubDate></item><item><title><![CDATA[2023-01-26]]></title><description><![CDATA[ 
 <br>
<br>Improvements to div::cop with Reflection and strict modes
<br>Unit tests
]]></description><link>https://divengine.org/documentation/div-php-template-engine/changelog/2023-01-26.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/ChangeLog/2023-01-26.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 21 Jul 2024 00:36:55 GMT</pubDate></item><item><title><![CDATA[CHANGELOG]]></title><description><![CDATA[ 
 <br>Jan 26, 2023<br>
<br>Improvements to div::cop with Reflection and strict modes
<br>Unit tests
<br><br>Dec 24, 2023<br>
<br>Moving forward to PHP 8.x &amp;&amp; phpstan checks level 3
<br><br>Feb 11, 2020<br>
<br>minor fix: Array and string offset access syntax with curly braces is deprecated
<br>release version 5.1.6
<br><br>Sep 21, 2019<br>
<br>release version 5.1.5
<br>fix div::varExists() method
<br><br>Ago 23, 2019<br>
<br>release version 5.1.4
<br>new method div::getVersion()
<br><br>Ago 22, 2019<br>
<br>release version 5.1.3
<br>fix resolution of templates path for win and *nix OS
<br>fix the relative path of included templates inside loop
<br><br>Ago 21, 2019<br>
<br>release version 5.1.2
<br>fix orphan conditional parts
<br>fix standalone preprocessed templates
<br>Now this example works!
<br>cmp.tpl<br>This is a generic template for create visual components. Each component have a face or content, and more child components. Each child can located in the face of their parent. The template self call recursively.<br>{strip}
?$location {{{$location} $location?

?$face {$face} $face?

?$components
    [$components] component =&gt;
        {= component.div.standalone: true =}
        {%% cmp: component %%}
    [/$components]
$components?

?$location {$location}}}  $location?
{/strip}
<br>Button.tpl<br>&lt;button&gt;{$icon}{$caption}&lt;/button&gt;
<br>Page.tpl<br>&lt;h1&gt;Buttons&lt;/h1&gt;
(( top ))
&lt;p&gt;Click on the buttons: &lt;p/&gt;
(( bottom ))

&lt;h1&gt;Fruits&lt;/h1&gt;
(( fruits ))
<br>index.php<br>&lt;?php

use divengine\div;

echo new div("cmp", [
        "id"         =&gt; "welcomePage",
        "face"       =&gt; "{% Page2 %}",
        "components" =&gt; [
            [
                "face"     =&gt; "{% Button %}",
                "location" =&gt; "top",
                "caption"  =&gt; "Click me",
                "icon"     =&gt; '*'
            ],
            [
                "face"     =&gt; "{% Button %}",
                "location" =&gt; "bottom",
                "caption"  =&gt; "Click me again",
                "icon"     =&gt; '#'
            ],
            [
                "face"       =&gt; "&lt;ul&gt;(( items ))&lt;/ul&gt;",
                "location"   =&gt; "fruits",
                "components" =&gt; array_map(function ($caption) {
                        return [
                            "face"     =&gt; "&lt;li&gt;{$caption}&lt;/li&gt;", // or "&lt;li&gt;{\$caption}&lt;/li&gt;" :D
                            "location" =&gt; "items"
                        ];
                }, ["Banana", "Apple", "Orange"])

            ]
        ]
    ]
);
<br><br>Jul 22, 2019<br>
<br>release version 5.1.1
<br>improvement support namespaces of div's child
<br>release version 5.1.0 
<br>improvement: Better resolution of default template for child classes of div, using Reflection!
<br>/some/folder/in/the/end/of/the/world/Page.tpl<br>Hello people
<br>/some/folder/in/the/end/of/the/world/Page.php<br>&lt;?php4

use divengine\div;

class Page extends div {

}
<br>/index.php<br>&lt;?php

include '/some/folder/in/the/end/of/the/world/Page.php';

echo new Page();
<br>Output<br>Hello people
<br><br>Jul 6, 2019<br>
<br>bugfix in div::scanMatch
<br><br>Jul 3, 2019<br>
<br>Divengine namespace!
<br>bugfix: Fix scope of standalone pre-precessed templates.  This fix prevent infinite loops and is util for recursive pre-process in a component based design.
<br>index.tpl<br>{= foo: "bar" =}
{%% component: {
	div: {standalone: true}, // ignore parent scope
	zoo: "monkey"
} %%}
<br>component.tpl<br>{$zoo}
{$foo} &lt;!--{ not exists in this scope }--&gt;
<br><br>Jul 2, 2019<br>
<br>new feature for custom engine:
<br>MyComponent.php<br>MyComponent extends div {
 ....
}
<br>index.tpl:<br>{%% component: {
	div: {
		engine: "MyComponent"
	},
	someProperty: "bla"
} %%}
<br><br>Jun 27, 2019<br>
<br>important change!: Now NULLs vars exists and are replaced with empty strings
<br>PHP<br>echo new div('Var is: {$var}', ['var' =&gt; null]);
<br>OUTPUT before this change:<br>Var is: {$var}
<br>OUTPUT after this change:<br>Var is:
<br>
<br>important change!: Fix scope of pre-processed templates inside loops
<br>Do not pre-process anything within the loops blocks if the loops have not been resolved<br>
The following code did not work as expected, because the pre-process was executed before doing the loop. So the $col variable did not exist and logic of the template will be broken.<br>[$cols] col =&gt;
	{%% element: {
		tag: "td",
		attrs: $col.attrs,
		inner: $col.content
	} %%}
[/$cols]
<br><br>Jun 14, 2019<br>
<br>bugfix: better resolution of tags with empty suffix. In this example "list.filter" is a substring of "list.filter.category", and then exists resulting unexpected code if $list.filter is false
<br>TPL<br>?$list.filter
  AAA
	?$list.filter.category
		BBB
	$list.filter.category?
  CCC
$list.filter?
<br>OUTPUT<br>?$list.filter
  AAA
<br>The fix was for other similar situations in div::getBlockRanges().<br>
The stop chars are the same in favor of text plain and XML family:<br>$stop_chars = ["&lt;",	"&gt;", ' ', "\n", "\r", "\t"];
<br><br>Sep 20, 2018<br>
<br>Optimize the code: change "is_null" as "=== null", because is_null is 250ns slower (in favor of PHP 5) 
<br>In PHP 7 (phpng), is_null is actually marginally faster than ===, although the performance difference between the two is far smaller.<br>PHP 5.5.9
is_null - float(2.2381200790405)
===     - float(1.0024659633636)
=== faster by ~100ns per call

PHP 7.0.0-dev (built: May 19 2015 10:16:06)
is_null - float(1.4121870994568)
===     - float(1.4577329158783)
is_null faster by ~5ns per call
<br><br>Aug 19, 2018<br>
<br>bugfix on constructor, when div var is an object and not an array
<br>Add file_exists as allowed function
<br>Add in_array as allowed function
<br><br>Oct 8, 2017<br>
<br>Re-thinking the change in June 10, 2013 about invalid JSON in assignments.  Is important the dynamic path of JSON files:
<br>{= i18n: i18n/{$lang}.json =}
<br>"i18n/{$lang}.json" without quotes is invalid JSON<br>Then, don't use quotes:<br>{= i18n: "i18n/{$lang}.json" =}
<br>
<br>Important improvement for loading JSON data from relative path in template variable's assignment:
<br>         relative  --&gt;
                  |
                  v
    /app/site/view/i18n/en/messages.json
                        ^
                        |
                 replacement result
<br>/app/site/view/page.tpl<br>{= lang: "en" =}
{= i18n: i18n/{$lang}/messages.json =}

{$i18n.message1}
<br>/app/site/view/i18n/en/messages.json<br>{
	message1: "Hello"
}
<br>Output:<br>Hello
<br><br>Oct 7, 2017<br>
<br>Change scope of -&gt;loadTemplateProperties() to public
<br>Other minor fixes
<br>Automatic update of template source code after prepareDialect() ...
<br>... &amp;&amp; new param for -&gt;prepareDialect() for disable automatic update
<br><br>Sep 30, 2017 [my birthday :)]<br>
<br>Fix a bug with getAuxiliaryEngine (clone vs assignment)
<br>Add some new system vars

<br>div.class_name: the name of current invoked class ('div' or child of 'div')
<br>div.super_class_name: the name of super parent of current invoked class name (normally is 'div')


<br>Code review
<br><br>Sep 25, 2017<br>
<br>Fix and improve getAuxiliaryEngine
<br><br>Sep 9, 2017<br>
<br>Fix dynamic include's paths inside loops
<br>[$blocks]
	{% blocks/block-{$id}.tpl %}
[/$blocks]
<br><br>Jun 2, 2017<br>
<br>Improve the translator. Now you can translate from and to other dialects.
<br>$tpl = new div("index.tpl", []);
<br>Translate from other dialect to current dialect:<br>$tpl-&gt;translateFrom($dialectFrom);
<br> Translate from current dialect to other dialect:<br>$tpl-&gt;translateTo($dialectFrom);
<br>Translate from any dialect to any dialect:<br>$tpl-&gt;translate($dialectFrom, $dialectTo, $src, $items);
<br>Maybe you need prepare the current dialect first:<br>prop = $tpl-&gt;getTemplateProperties();
$tpl-&gt;__src = $tpl-&gt;prepareDialect(null, $prop);
<br><br>May 29, 2017<br>
<br>Some bugfixs
<br>New variable for inline data of preprocessed templates:  div.standalone, by default is FALSE.<br>
This means that the "foo" variable will not be passed to the template pre-processor. That is, the variables in the parent template will be ignored and only the data specified in the line will be used.
<br>{= foo: value =}
{%% block.tpl: {
	div: {
		standalone: true
	}
} %%}
<br>  This better facilitates the recursive inclusion of  templates, useful in generation of source code and  other hierarchies like XML, HTML, JSON, etc.<br>
<br>Do not include anything within the conditional blocks if the conditions have not been resolved. This check prevent infinite loops.
<br>   ?$block
   {%% block: {...} %%} &lt;-- wait for block question results
   $block?
<br>
<br>Priority change for items over filesystem when include o preprocess templates.  To force load data from external file, please type the path or full path (ex: block.json)
<br>{= block: {
    var1: "value1"
    var2: "value2"
} =}
<br>  Take the block value<br>
{%% tpl: block %%}<br>  Take json from external file<br>
{%% tpl: block.json %%}<br><br>December 22, 2016<br>
<br>PHP 7 Compatibility check
<br>Release 4.9 version 
<br><br>November 16,  2016<br>
<br>important bugfix/improvement: access to parent loop
<br>[$parentloop] parent =&gt;
	[$childloop] child =&gt;
		Parent key: {$parent._key}
		Child key: {$_key} or {$child._key}
	[/$childloop]
[/$parentloop]
<br>
<br>TODO: test &amp; release
<br><br>November 14,  2016<br>
<br>add new default subparser join
<br>Syntax:<br>{join} varname | delimiter {/join}
<br>index.tpl<br>{= tags: ['a','b', 'c'] =}
{join} tags |, {/join}
{join} tags |,{/join}
{join} tags {/join}
<br>Output:<br>a, b, c
a,b,c
abc
<br><br>October 10,  2016<br>
<br>Several tests
<br>Release 4.8 version
<br><br>January 12,  2016<br>
<br>review example
<br><br>December 24,  2015<br>
<br>improved dialect translator div::translateFrom
<br>some bug fixes
<br>update documentation
<br><br>December 23,  2015<br>
<br>add new feature for dialects: DIV_TAG_VAR_MEMBER_DELIMITER. This dialect's constant define a delimiter for variable's members. For example:
<br>by default you use:<br>{$person.name}
<br>but now you can do...<br>index.php<br>&lt;?php

	define('DIV_TAG_VAR_MEMBER_DELIMITER','-&gt;');

	include "div.php";

	echo new div("index.tpl", array(
		'person' =&gt; array(
			'name' =&gt; 'Peter',
			'child' =&gt; array(
				'name' =&gt; 'eli'
			)
		)
	));
<br>index.tpl<br>{$person-&gt;child-&gt;name}
{$person-&gt;name}	
<br>TODO: improve dialect creator tool<br>
TODO: check dialect translator method div::translateFrom()<br>
<br><br>December 19,  2015<br>
<br>several tests
<br>Release 4.7 version
<br><br>December 12,  2015<br>
<br>[starting release 4.7]
<br>some bug fixes, thanks to gracix and Takefumi Ota
<br>Improve template's vars and OOP: now you can access to a public method of any object. 
<br>Example:<br>index.php<br>&lt;?php
class Person {

	...
	public function getFullName(){
		return $this-&gt;first_name.' '.$this-&gt;last_name;
	}
	...
}

echo new div('index.tpl', array("person" =&gt; new Person(...)));
<br>index.tpl<br>{= fullname: -&gt;person.getFullName() =}`
The full name is {$fullname}
<br><br>December 11,  2015<br>
<br>Bugfix in div class constructor
<br>Release 4.6 version
<br><br>December 1,  2014<br>
<br>some bug fixes
<br>Release 4.5 version
<br><br>November 24,  2014<br>
<br>improve div::isValidPHPCode()
<br><br>October 7,  2014<br>
<br>improve performance changing $vars with __temp['vars'] var in parseMacros(); because because get_defined_vars return also vars
<br>prevent infinite loops in div::cop(); 
<br><br>October 6,  2014<br>
<br>new setup var: div.clear_locations (= true by default). This means that the locations will be clear or not at the end (parse_level = 0). Then, the component are more flexible with pre-processed templates: 
<br>comp.tpl<br>(( before )) &lt;input type="{$type}" name="{$name}"&gt; (( after ))
<br>index.tpl<br>{%% comp: {
	type: "text",
	name: "first_name",
	div: {
		clear_locations: false
	}
} %%}

&lt;!--{ If div.clear_locations is true (by default), the next code don't work }--&gt;

{{before &lt;label&gt;First Name&lt;/label&gt; before}}
{{after &lt;input type="submit"&gt; after}}
<br><br>September 26,  2014<br>
<br>bugfix parseData() vs parseMatch() logical order
<br><br>September 23,  2014<br>
<br>bug fix in parsePreprocessed() when $pdata is null
<br>bug fix with number formats inside loops  
<br><br>September 21,  2014<br>
<br>new feature: advanced options/params for includes
<br>index.tpl<br>{% subtpl: {
	from: "&lt;!--{ begin }--&gt;",
	to: "&lt;!--{ end }--&gt;",
	offset: 2,
	limit: 1
} %}
<br>subtpl.tpl<br>Any text...

&lt;!--{ begin }--&gt;Some text 1&lt;!--{ end }--&gt;

Any text...

&lt;!--{ begin }--&gt;Some text 2&lt;!--{ end }--&gt;

Any text
<br>
<br>bugfix: Preparing allowed methods before execute the macros
<br><br>September 20,  2014<br>
<br>bugfix: Parsing macros inside preprocessed templates. New argument $min_level for parse() method.
<br>Add new allowed functions in macros, formulas and expressions: array_keys get_object_vars is_object
<br>new static method div::div():
<br>index.php<br>&lt;?php	
	echo div::div('index.tpl', array("item1" =&gt; "value1"));
<br>
<br>Allow T_BREAK token in macros for foreach and other loops. Then, the follow macro is an error:<br>
index.tpl
<br>&lt;? break; ?&gt;
<br>Output<br>Fatal error: Cannot break/continue 1 level in div.php: eval()'d code on line 1
<br><br>September 17,  2014<br>
<br>bugfix/improve - Parsing orphan's parts while checksum not change. Do it because the orphans's parts stop the parser and the results are ugly.
<br><br>September 16,  2014<br>
<br>big fix: Set the priority to inline data in pre-processed templates above global design vars
<br><br><br>
<br>bigfix: Save sections of loops and capsules when makeItAgain(); (Div doesn't know the future)
<br><br><br>
<br>bugfix: Adding items to array in templates
<br>{= somearray[]: "new item" =}<br>
<br>bugfix: Don't set item var as design var in div::parseData();
<br><br><br>
<br>bugfix: Parse pre-processed templates with all items/vars (Div doesn't know the future)
<br><br><br>
<br>
New feature for preprocessed templates: specific data
Syntax:
{}
data is: json, name of var or filename with json
Example:
Now is more simple for build the components:

{%% form: {<br>
action: "login.php",<br>
method: "post.php",<br>
fields: [<br>
{<br>
type: "text",<br>
name: "user",<br>
label: "User"<br>
},{<br>
type: "password",<br>
name: "pass",<br>
label: "Password"<br>
}<br>
],<br>
submit: {<br>
value: "login",<br>
name: "btnLogin"<br>
}<br>
} %%}


	[$fields]
		{$label}:<br>
		<br>
	[/$fields]
	

    

<br><br><br>
<br>Security fix: prevent obtrusive code in method calls. Now next code dont work:
<br>{= content: -&gt;getPage(file_put_contents('some.txt','some text')) =}<br><br><br>
<br>Fix the memory in the loops
<br><br><br>
<br>Fix macros parsing when a previous template var never match
<br><br><br>
<br>Allow is_array PHP function in macros
<br>New method for add literal vars in PHP: div::addLiteral();
<br><br><br>
<br>Some bugfixs
<br>Add new important security feature: setup literals items/vars, for prevent injections! 
<br>Example:<br><br>{= div.literals: ["text1", "text2"] =}	<br>{$text1}<br>{$text2}<br>{$text3}<br><br>echo new div('index.tpl', array(<br>
'text1' =&gt; '{/ignore}[:1,5:] {$value} [/]{ignore}', // I am being about deceiving the security<br>
'text2' =&gt; '[:1,100;] text to repeat [/]',<br>
'text3' =&gt; '[:1,3;] some [/]'<br>
));<br><br>[:1,5;] {$value} [/]<br>
[:1,100;] text to repeat [/]<br>
some some some<br><br><br>
<br>Memory fixed!
<br><br><br>
<br>bugfix: div::fileExists and wrong include paths calculation
<br><br><br>
<br>Improvement of global design vars in loops and capsules
<br><br><br>
<br>bugfix: div::getFileContents()
<br><br><br>
<br>
An important bug was fixed: the memory in the loops:
In div 4.4 dont't work:

 array("Havana", "Tokyo")));

index.tpl
--------------------------------
{= foo: [
	{ title: "Cities",
	  content: '{% cities.tpl %}'
	}
] =}

{% layout.tpl %}

layout.tpl
---------------------------------
?$foo
	[$foo]
		
		{$content}<br>
	[/$foo]		
$foo?

cities.tpl
---------------------------------
?$cities
	[$cities]
		{$value}
	[/$cities]
@else@
	No cities
$cities?

Output (wrong!)
---------------------------------

No cities<br>

Output (great in 4.5)
---------------------------------

Havana Tokio<br>

<br><br><br>
<br>Decrease of priority in parser's specialchars
<br><br><br>
<br>bugfixs!
<br>Release 4.4 version
<br><br><br>
<br>bugfix the translator
<br>New feature: Multi template sources (based on include_path PHP setting)
<br><br><br>
<br>Improvement of the modifier "escape single quotes" (')<br>
to "escape single/double quotes" (").
<br>Improvement of default documentation's template.
<br><br><br>
<br>Improvement of logs's system
<br>Release 4.3 version
<br><br><br>
<br>
Integration with Google Chrome/Console and Mozilla Firefox/Firebug plugins.<br>
Now the engine's messages will be appear in this browsers's features.

<br>
Improvement of detection of infinite loops in recursive replacements:

{= bar: {e}} =}<br>
{= e: 'bar'} =}
{$bar}

<a data-href="FATAL ERROR" href="https://divengine.org/FATAL ERROR" class="internal-link" target="_self" rel="noopener nofollow">FATAL ERROR</a> WAS DETECTED AN INFINITE LOOP IN RECURSIVE REPLACEMENT OF $foo.

<br>
Improvement of parser and bugs fixes: if foo not existed, widget waits forever.<br>
Now the next example works:

  {= widget: 45 =}
{?( "{$foo}" == "a" )?}   <br>
{= bar: 5 =}<br>
{/?}
{$widget}                 

45
Solved!

<br><br><br>
<br>
Improvement of relative include/preprocessed templates.<br>
Now the next example works:

{% folder/tpl1 %}

{% folder2/tpl2 %}

{% tpl3 %}

Hello

Hello

<br>
Improvement of template's variables assignment.<br>
Now the next example works:

{= position: "absolute" =}
{?( "{$position}" == "absolute" )?}<br>
{= absolute: true =}<br>
@else@<br>
{= absolute: false =}<br>
{/?}
?$absolute YES $absolute?

YES

<br>
Improvement of the variables's scope:<br>
Now the next example works:

  {= foo: true =}<br>
{= bar: [1,2,3] =}
  ?$foo<br>
YES<br>
$foo?
  [$bar]<br>
{= foo: (# {foo<br>
YES<br>
@else@<br>
NO<br>
bar]
  {$foo}

YES
NO	<br>
<br>
YES
YES
true

<br><br><br>
<br>
Improvement of the parser of template's vars:<br>
If the value is not valid JSON, it will be considered as<br>
a template and will be parsed before decoding.
See the next sequence:

<br>Value is not valid JSON: {= digits: [[:0,8:]{$value},[/]9] =}
<br>Value was parsed:        {= digits: [0,1,2,3,4,5,6,7,8,9] =}
<br>Now "digits" is an array.
<br>Replacement:             {$digits} 

See the difference:

<br>Value is valid JSON:     {= digits: "[[:0,8:]{$value},[/]9]" =}
<br>Value was not parsed:    {= digits: "[[:0,8:]{$value},[/]9]" =}
<br>Now "digits" is an string.
<br>Replacement:             {$digits} 


<br>
Improvement of the parser of template's variables. Was improved<br>
the detection of assignment of variables in any part of the<br>
JSONs values. For example:

{= cities: ["New York", "Tokyo"] =}
{= combobox: {<br>
id: "cboCities",<br>
options: $cities<br>
} =}
{$combobox.options.0}

New York

<br><br><br>
<br>Improvement of template's documentation
<br>Release new version 1.1 of Div Dialect Creator
<br>Release the version 4.2
<br><br><br>
<br>Fix/improve the translator
<br>Fix/improve the parser 
<br><br><br>
<br>
Improvement of the parser of ignored parts

<br>
Improvement of the parser of includes

<br>
New feature: template's documentation. Now in the comments you can<br>
document the template. The documentation's parts have @ as prefix. For example:
&lt;!--{ 
    @icon [[]]
	@type Div PHP Template Engine Component
	@name Simple Combobox 
	@autor Rafael Rodriguez Ramirez &lt;rafa@pragres.com, rrodriguezramirez@gmail.com&gt;
	@version 1.0
	@update 1/06/2013
	@website http://divengine.com
	
	@property optional &lt;string&gt; id 
	@property optional &lt;string&gt; class 
	@property optional &lt;string&gt; name    
	@property optional &lt;string&gt; label 
	@property optional &lt;number&gt; default 
	@property required &lt;array&gt;  options
	
	@example
	[[_
		{= class: "combo" =}
		{= id: "cboCities" =}
		{= name: "cboCities" =}
		{= options: ["New York", "Tokyo", "Havana"] =}
		{= default: 1 =}
		{= label: "Cities" =}
		{% components/div-cmp-simple-combobox %}
	_]]
	
}--&gt;

To obtain the documentation data:

$data = div::getDocs();

To obtain a readable documentation:

echo div::getDocsReadable(/* optional template */);


<br>
Fix the algorithm of getRanges().

<br>
Fix the parser of macros.

<br>
Added a new sub-parser's event: afterReplace.

<br><br><br>
<br>
Improvement of the algorithm of getRanges() to make all the possible one. Now<br>
Div continues searching ranges after unclosed tags. 
- For next template:

index.tpl
----------
{/
{/div.now/}

- In previous versions (1.0 - 4.1):

Output:
----------
{/
{/div.now/}

- From Div 4.2:

Output:
----------
{/
2013-05-31


<br><br><br>
<br>Test new version
<br>Minor bugs was fixed
<br>Improvement of the detection of date formats
<br>Release 4.1 version
<br><br><br>
<br>Fix and improve the algorithm of div::getVarValue() method.
<br>Fix the detection of conditional parts.
<br><br><br>
<br>Change to private some div's properties
<br>Release 4.0 version
<br><br><br>
<br>Improvement of the conditional parts detection 
<br><br><br>
<br>
Fixed some bugs in locations and conditional parts.

<br>
Created a translator of dialects. Now div have 2 new public methods:
 $tpl = new div('templateWithDialectX.tpl', $data);
 $dialectY = 'json code'; // or associative array
 // Return the translated template<br>
dialectY);
 // Translate and change the original template<br>
dialectY);

<br>
New feature: template properties. Now you can specify some properties<br>
in the template's code, for example, the dialect of the current template:
Example:

index.tpl
------------------------------
@_DIALECT = smarty.dialect

{* this is a comment *}
Name: {$name}

{literal}
{$name}
{/literal} 

{% other %}

other.tpl
------------------------------
@_DIALECT = twig.dialect

{{ foo.bar }}

smarty.dialect
------------------------------
{
  'DIV_TAG_IGNORE_BEGIN': '{literal}',
  'DIV_TAG_IGNORE_END': '{/literal}',
  'DIV_TAG_COMMENT_BEGIN': '{*',
  'DIV_TAG_COMMENT_END': '*}'
}

twig.dialect
-------------------------------
{
  'DIV_TAG_REPLACEMENT_SUFFIX': ' }}',
  'DIV_TAG_MODIFIER_SIMPLE': '{ '
}

index.php
-------------------------------
&lt;?php

include "div.php";
echo  new div("index.tpl", array(
	'name' =&gt; 'Peter',
	'foo' =&gt; array(
		'bar' =&gt; 45
	)
));

Output
-------------------------------
Name: Peter

{$name}

45


<br>
New feature: predefined subparsers. Div provide pre-defined sub-parsers, for example,<br>
{parse}...{/parse}. This example of sub-parser make a pre-proccess of enclosed code.<br>
This means that a new instance of div will be created, similar to the loops<br>
and the capsules. Other predefined subparsers will be developed in future releases.

<br>
New feature: sub-parser's events. Now in the templates's code you can specify when<br>
a sub-parser will be executed: beforeParse, afterInclude or afterParse. Example:
index.tpl
---------------------------
{= name: "Peter" =}

{= products: [<br>
{<br>
name: "banana",<br>
price: 40<br>
},<br>
{<br>
name: "potato",<br>
price: 25<br>
}<br>
] =}
[$products]<br>
{parse:beforeParse}<br>
Name: {name}<br>
<br>
{% other %}<br>
[/$products]
  other.tpl

  {parse:beforeParse}<br>
Other name: {$name}<br>
{/parse:beforeParse}
Output
--------------------------------------
Name: Peter

Product name: banana<br>
Other name: banana<br>
Name: Peter<br>
Product name: potato<br>
Other name: potato

<br><br><br>
<br>Created a tool to build dialects.
<br>Release the 3.9 version
<br><br><br>
<br>
Enable custom dialect for developers! 
 A dialect is defined by the group of constant whose name<br>
begins with DIV_TAG. This dialect is subject to some simple<br>
rules that Div forces to complete for preveer inconsistencies and<br>
infinite loops.

<br>
New static method isValidCurrentDialect, for detect error in the<br>
definition of current dialect, based on this rule:

<br>some tags are required, like as, prefixes, suffixes, beginnings and ends.
<br>some tags must be unique, like as, modifiers, else, break, empty, ...


<br><br><br>
<br>New static method anyToStr, for convert mixed value to string based on this rule:

<br>string is string
<br>boolean is "true" or "false"
<br>number is "number"
<br>object with toString() is toString()
<br>object without __toString() is array
<br>array is count()


<br>Changed the type of unchangeable methods to "final".
<br><br><br>
<br>
The interpretation of date format was improved.
If you need type the char ":" in the format, and this<br>
char is the separator between var and format, then type<br>
a backslash before ":", like as this:
{/2012-01-01 00:30:00 : Y-m-d h:i:s/}
In the example the value is "2012-01-01 00:30:00 " and<br>
the format is "Y-m-d h:i:s".<br>


<br><br><br>
<br>
The interpretation of aggregate functions was improved.<br>
The next example work now:

{= products: [<br>
{name: "Banana", price: 10},<br>
{name: "Potato", price: 20}<br>
] =}
{$products.0.price}<br>
{#products.0.price:2#}
{$sum:products-price}<br>
{#sum:products-price:2,#}<br>
{%sum:products-price} 

10<br>
10.00
30<br>
30,00<br>
2

<br><br><br>
<br>
Performance: work remembered! Now the engine can remember some<br>
actions from previous work and increase their speed. 	 

<br>
New feature: the macros.
A macro is a restricted PHP code inside the templates to facilitate the complex processing<br>
with the advantages of this language. The security is guaranteed. See the next silly example:

 'Hello world'));

index.tpl
-------------

{$title}

Hello world
HELLO WORLD

<br>
New feature: the custom sub-parsers
A sub-parser is a parser implmemented by the programmer. For example:

 'Hello world'));

index.tpl
----------------

{literal}

{/literal}

{$title}

Ouput
----------------


Hello world

<br><br><br>
<br>bugfix in the bodies of multi-replacements
<br>Changed the name of method multiReplace by parseMultiReplace
<br><br><br>
<br>
The template variables's manipulation was improved:
 Example:

 {= product: {<br>
name: "banana"<br>
price: 20<br>
} =}
 Name: {^product.name}<br>
Price: ${#product.price:2.#}
 {= product.price: (# {$product.price} * 2 #) =}
 Double price: ${#product.price:2.#}
 [[product<br>
Current price: {$price}<br>
product]]
 Output:

 Name: banana<br>
Price: $20.00
 Double price: $40.00
 Current price: 40<br>


<br>
New static methods are added:
div::issetVar(var, var, var, items)

 product
    [1] =&gt; product.name
    [2] =&gt; product.price
)	


<br>
The method setItem and getItem was improved with detection of complex variable's names:

 array(
		"name" =&gt; "Banana",
		"price" =&gt; null
	)
)); 

$tpl-&gt;setItem("product.price", 10);

index.tpl
-------------------
Name: {$product.name}
Price: ${#product.price:2.#}

Output
------------------
Name: Banana
Price: $10.00	

<br><br><br>
<br>
The order respect of template variables's manipulation was improved:

{= a: 5 =}
{$a}
{= a: (# {$a} + 1 #) =}
{$a}
{= a: (# {$a} + 1 #) =}
{$a}

5
6
7	

<br><br><br>
<br>
bugfix of template variables when it use object's methods<br>
Now you can call a object's method with some ways:
 Similar to PHP:
 {= result: -&gt;method(param1, param2, param3) =}
 One parameter as JSON data:
 {= result: -&gt;method({param1: value1, param2: value2});<br>


<br>
bugfix of loops, prevent a recursion with var '_item' as object inside the same object:
Product Object<br>
(<br>
[price] =&gt; 0<br>
[quantity] =&gt; 0<br>
[_item] =&gt; Product Object<br>
RECURSION<br>
)

<br><br><br>
<br>Fix some issues
<br>New method div::isSring as a safe is_string():

<br>if is a string return true
<br>if is a object with __toString method return true


<br><br><br>
<br>
The scalar values as a complex values! What?
Yes! Now all the scalar values can be used as strings. Then, the strings can be<br>
used like complex values, that is to say, as group of characters. For example:

{= name: "Peter" =}

{$name.0} 

<br> <br>  {$name.1}<br>  {= x: 537 =}<br>  <br>  {$x.0} <br> <br>  {$x.1}<br>  <br>  [$name]{name]<br>  <br>  [$x] {x] = (# [$x] {x] 1 #)<br>  Output:<br><br>  P<br>  e<br>  5<br>  3<br>  P e t e r<br>  5  3  7 = 105<br><br><br>
<br>
Version 3.7 was released with a serious error that was corrected in the 3.8

<br>
Release the 3.8 version

<br><br><br>
<br>
Improved the interpretation of third parameter of the constructor<br>
as a string with the variables's names.
echo new div('index.tpl', array('name' =&gt; 'Peter', 'age' =&gt; 25, 'sex' =&gt; 'M'), 'name,age');

<br>
Release the 3.7 version

<br><br><br>
<br>
Improvement of the speed.

<br>
Improvement of the options arround the __toString method of objects in 3 scopes. See the example below.
The old policy:
"if an object has implemented the method __toString then be treated as a string" 
It was changed for:
"if an object has implemented the method __toString, you can work with the object as a character string"
Example:
  index.php

  name = $name;
		$this-&gt;price = $price;
	}

	public function __toString(){
		return $this-&gt;name.' ($'.$this-&gt;price.')';
	}
}

// The object as string
echo new div('index.tpl', array("product" =&gt; new Product('Banana', 10)));

// Template scope
echo new div('index1.tpl', array(new Product('Banana', 10)));

// Capsule scope
echo new div('index2.tpl', array("product" =&gt; new Product('Banana', 10)));

// Loop's body scope
echo new div('index3.tpl', array("products" =&gt; array(new Product('Banana', 10))));

  ?&gt;
index.tpl
------------
{$product}

  Output for index.tpl

  Banana ($10)
  index1.tpl

{$value}
is similar to 
  {$_to_string}
  index2.tpl

  [[product
  {$value}
is similar to 
  {$_to_string}
  product]]
  index3.tpl

  [$products]<br>
{$value}
is similar to 
{products]<br>
<br>
Same output for index1, index2 and index3

  Banana ($10)
  is similar to
  Banana ($10)

<br><br><br>
<br>
From version 3.6 Div maintains a policy regarding the use of objects: if an<br>
object has implemented the method __ toString then be treated as a character string.<br>
We are working to improve the policy and avoid unhappy.
index.php

&lt;?php

include "div.php";

class Product{
	public function __construct($name, $price){
		$this-&gt;name = $name;
		$this-&gt;price = $price;
	}

	public function __toString(){
		return $this-&gt;name.' ($'.$this-&gt;price.')';
	}
}

echo new div('index.tpl', array("products" =&gt; array(new Product('Banana', 10))));
?&gt;

index.tpl

[$products]
	{$value}
[/$products]

Output
Banana ($10)

We are working to improve the policy and avoid unhappy.


<br><br><br>
<br>
Some functions of PHP are enabled in formulas and conditions. 

<br>
Added a new system var named: $div.ascii. This var contain the all chars of ASCII table.


{$div.ascii.64}
is similar to
(# chr(64) #)
but the replacement is faster than calculation

@
is similar to
@
but the replacement is faster than calculation<br>


<br><br><br>
<br>
Added a new feature for programmers: the method changeTemplate()
 "Hello world"));

echo $tpl; // $tpl-&gt;show();

$tpl-&gt;changeTemplate('index2.tpl');

echo $tpl; // $tpl-&gt;show();

?&gt;

<br>
Improvement of the show() method with a new parameter: specific template
title = "Hello world";
$tpl-&gt;show('template.tpl');

?&gt;

<br><br><br>
<br>
Added new variable's modifiers: 
{&amp;&amp;var} - rawurlencode<br>
{'var} - escape unescaped single quotes<br>
{js:var} - escape quotes and backslashes, newlines, etc.<br>
{$var:[string format]} - format the value with sprintf PHP function

<br>
Added new feature for programmers: custom variable's modifier
For add a new custom variable's modifier you need call the method:
div::addCustomModifier($prefix, $function)
The parameter $function can be the name of function or the name of static method of a class, for example
div::addCustomModifier('upper', 'MyModifiers::upper');

index.php
 'http://localhost'));

?&gt;

{upi:url}

http%3A//localhost

<br>
Added new feature for programmers: the hooks!. The hooks are:
  beforeBuild, afterBuild, beforeParse, afterParse  
  Example:
  index.php

  class HomePage extends div{
  	public function beforeBuild(){<br>
$this-&gt;__src = "index";<br>
$this-&gt;setItem(array(<br>
"title" =&gt; "Hello World"<br>
));<br>
}<br>
}
  echo new HomePage();
  index.tpl

  
  
  Output
  ----------------
  
  

<br>
Improvement of the setItem method  

<br><br><br>
<br>
Improved the access to object's public methods

first_name = $first_name;
		$this-&gt;last_name = $last_name;
	}
	function getCompleteName(){
		return $this-&gt;first_name.' '.$this-&gt;last_name;
	}
}

echo new div('index.tpl', array(
	'person' =&gt; new Person('John', 'Nash')
));

index.tpl
---------------------
[[person

	{= cn: -&gt;getCompleteName() =}
	
	First Name: {$first_name}
	Last Name: {$last_name}
	Complete name: {$cn}

person]]
	
Output
----------------------
First Name: John
Last Name: Nash
Complete name: John Nash


<br>
Release the 3.6 version

<br><br><br>
<br>
Improved the feature "template vars". Now you can execute the "methods of information".
Example:



somedata is: {$somedata}
{= names: -&gt;getNames() =}
The names are: [$names] {names]

somedata is: 100
The names are: Jones Pete Mark

<br><br><br>
<br>Improved the detection of orphan conditional parts
<br><br><br>
<br>Update the documentation
<br>Fixes some bugs of new features
<br>Release the 3.5 version
<br><br><br>
<br>
New feature: locations!
Now you can define a diferent locations in your template<br>
and put in this locations any content.

(( top ))
(( any )) Some content here (( any )) 
(( bottom ))
{{top<br>
This is the top of the page<br>
top}}
{{bottom<br>
This is the bottom of the page<br>
bottom}} 
{{any<br>
<br><br>
any}}

This is the top of the page 
<br> Some content here <br>
This is the bottom of the page

<br>
Improvement of the conditional parts: the first and last blank space are removed.

?$what Hello $what?

 Hello 

?$what Hello $what?

Hello

<br><br><br>
<br>
New feature: @empty@ tag for list's blocks 
[$users]<br>
{users]

<br><br><br>
<br>The documentation was updated
<br>Improved detection of infinite loops on includes and replacements
<br>Release the 3.4 version
<br><br><br>
<br>
Add new feature: Multiple variable's modifiers

{$varname|modifier1|modifier2|modifier3|...|}

{= word: "ABCDEFG" =}
{word|0,3||}<br>
{$word|0,3||^|}<br>
{$word|0,3|_|^|~2|}

ABC<br>
abc<br>
Abc<br>
Ab

<br><br><br>
<br>Fix a critical bug: prevented infinite cycle
<br>Release the 3.3 version
<br><br><br>
<br>
Fix a bug with {ignore} functionality

<br>
Add new vars for the iterations: $_previous and $_next.

{= list: [10,5,7,12,8,8,10,10] =}<br>
[$list]<br>
{= _previous:  0 =}<br>
{= _next:  infinite =}<br>
{value}..{list]	

0..1..2<br>
1..2..3<br>
2..3..4<br>
3..4..5<br>
4..5..6<br>
5..6..7<br>
6..7..8<br>
7..8..9<br>
8..9..10<br>
9..10..infinite 

<br>
Algorithm improved: 95% more faster.

<br>
Release the 3.2 version

<br><br><br>
<br>Improved date's values detection
<br><br><br>
<br>Update documentation
<br>Release 3.1 version
<br><br><br>
<br>
Detection of recursive inclusion as an error. For example:

&lt;!- This include will not take effect --&gt;<br>
{% index %}

<br><br><br>
<br>Improved the algorithm of lists/loops/cycles
<br><br><br>
<br>Allowed "intval" PHP function in formulas
<br><br><br>
<br>Fix some problems
<br>Improvement of some mechanisms
<br>Release the 3.0 version
<br><br><br>
<br>
Fix important issue for matchs. Now work the follow example:
{= list: [<br>
{<br>
name: "Banana",<br>
price: 20,<br>
shipments: [<br>
{<br>
date: "2012-05-09",<br>
packages: [<br>
[20, 30, 40]<br>
]<br>
}<br>
]<br>
},<br>
{<br>
name: "Potato",<br>
price: 40<br>
}<br>
] =}
{list.0}<br><br>
{list.0.shipments.0}<br><br>
{list.0.shipments.0.adresses.0}<br><br>
{$list.0.shipments.0.adresses.0.0}<br>

<br><br><br>
<br>Fix bugs of conditions into loops
<br><br><br>
<br>Fix bugs
<br>Release the 2.9 version
<br><br><br>
<br>
Improvements to the template's vars. Now you can do this:


{$body}

{= content: article =} 
Header
{$content}
Footer

<br><br><br>
<br>
Delete the DIV_CLASS_NAME constant: now is more simple to change the name of<br>
div class. Simply change the name of div class, no more!<br>


<br>
Fix problem of template vars's scope. The inheritance mechanism is more simple now:



{= block1: 
...some code here...
=}

{$block1}



{= *block1:
...some another code here...
=}

{% parent %}

<br><br><br>
<br>
The algorithm of text summary was improved.

<br>
New feature: IDE's friendly marks 
Example:

&lt;p&gt;Name: {$name}&lt;/p&gt;
&lt;p&gt;Price: {$price}&lt;/p&gt;

&lt;!--| {?( {$price} &gt; 10 )?} |--&gt;
	Expensive product
&lt;!--| {/?} |--&gt;


Is similar to:
[$products]
&lt;p&gt;Name: {$name}&lt;/p&gt;
&lt;p&gt;Price: {$price}&lt;/p&gt;

{?( {$price} &gt; 10 )?}
	Expensive product
{/?}

[/$products]

<br><br><br>
<br>Change the type of method of getSystemData from public to static
<br><br><br>
<br>Change the type of method of mixedBool from public to static.
<br>Release the 2.8 version
<br><br><br>
<br>Added new feature: Relative paths for include and preprocessed templates.
<br><br><br>
<br>Freed of the function json_encode of PHP and corrected some errors of this function.
<br><br><br>
<br>
Fixed bugs:

<br>If you don't define a variable, the expression is FALSE:

Example:
 "some")); // var2 is missing

index.tpl
----------

{?( "{$var1}" == "some" &amp;&amp; "{$var2}" == "another" )?)
Part 1
@else@
Part 2
{/?}

Output:
----------
Part 2

- If you don't define a variable, the formula will be ignored:

Example:
 2)); // var2 is missing

index.tpl
----------

(# {$var1} + {$var2} #)

Output:
----------

(# 2 + {$var2} #)

<br><br><br>
<br>Fixed bugs
<br>Release the 2.7 version
<br><br><br>
<br>
Fixed bugs

<br>
Add new feature for json encode.
Example:
 array(1,2,3,4,5)));

{json:variable}

Outoput:

[1,2,3,4,5]


<br><br><br>
<br>Fixed bugs
<br>Release the 2.6 version
<br><br><br>
<br>
Added new features for replacements: multiple replacements

{= replac: [<br>
['search this string',      'replace with this string',              false],   &lt;!--{ str_replace }-&gt;<br>
['search regular expresion','replace with this string or expresion', true]     <br>
] =]

{:replac}
... some code here ....
{:/replac}

{= php-code: [<br>
['echo ', 'echo '],<br>
['/'(<a data-tooltip-position="top" aria-label="?:%5C.%7C%5B%5E%5C'%5D*" rel="noopener nofollow" class="external-link" href="https://divengine.org?://.|[^/']*" target="_blank">^'</a>*)'/i', ''$1'',true]	<br>
] =}
{:php-code}

{:/php-code}

echo 'hello world'
?&gt;

<br>
Fixed bugs

<br><br><br>
<br>
Add new features for performance: enable and disable system var
  div::enableSystemVar("div.session");<br>
div::disableSystemVar("div.server");<br>
...

<br><br><br>
<br>
Fixed bugs

<br>
Added new funcionality for log: Save the steps of the parser into log file
// Save the steps of the parser into log file<br>
div::logOn("mylogfile.log");<br>
...

<br>
Release the 2.5 version

<br><br><br>
<br>
Fixed bugs

<br>
Added new functionality: html to text 
{txt}	... some html code here ..  {/txt}<br>
{txt} width =&gt; ... some html code here {/txt}
The width integer parameter, wrap the text with this width.

<br><br><br>
<br>
Fixed bugs

<br>
Added new functionality: text wrap
If you needed the wrap of a text with a specific width, you can do this:
{$body:/200} 
If you use the br modifier, the text wrap take effect on the web:
{br:body:/200}	

<br>
Release the 2.4 version

<br><br><br>
<br>
Added new functionality: show the teaser of a text. Similar to get a substring of text:
{$mytext:100} 
If you add the symbol ~, you can retrieve the teaser of $mytext:
{$mytext:~100} 

<br><br><br>
<br>
NEW: Allow to asign a program var to a template var. For example:

 5));
...
?&gt;

{= another: $some =}
{$another}

5
Also you can asign to the specific property of template var:

{= someobj: {<br>
property: "$some" <br>
} =}
{$someobj.property}

<br>
Release the 2.3 version

<br><br><br>
<br>
NEW: Allowed functions. Now the programmer can enable functions<br>
of or written in PHP so that the designer can use them in the templates.


(# sum(2,3) #)

<br>
NEW: Add new item to list or set a property of object:

... some more code here ...
{= list: [1,2,3] =}<br>
{= customer: {<br>
name: "Peter",<br>
phone: "222-444555"<br>
} =}
... some more code here ...
{= list[]: 4 =}                         <br>
{= customer[address]: #221 street 45 =} 
... some more code here ...
{$list.4}
{$customer.address}

<br><br><br>
<br>Fixed bugs
<br>Release 2.2 version
<br><br><br>
<br>
New functionality: assign to design vars the result of method! If the programmer<br>
implemented a class that inherits of div, then the designer can use the methods of this<br>
class. 
Syntax for template:
{= variable: -&gt;methodName(params as JSON) =}<br>
<br>
For example:

x + $params-&gt;y;
	}
	
	public function getLetters(){
		return array("A","B","C");
	}
	
}
?&gt;

{= sum: -&gt;getSum(x: 20, y: 30) =}   
{$sum}
{= lts: -&gt;getLetters() =}
[$lts] {lts]

50 A B C

<br><br><br>
<br>
Now the definition of data in templates is similar to set a global var in the programmer side<br>
and you can re-refine this data every time in the template and now the sequence of the operations<br>
is not ignored.  The variables have arrived!
For example:



{= products: [<br>
{price: 10, qty: 5},<br>
{price: 20, qty: 2}<br>
] =}
{= invoice_price: 0 =}<br>
{= tax: 20 =}
[$products]	{= invoice_price:  (# {qty} * {products]
Invoice price: {#invoice_price:2.#}<br>
Tax: {#tax:2.#}<br>

{= invoice_price: (# {tax} #) =}
Total price: {#invoice_price:2.#}


Invoice price: 90.00<br>
Tax: 20.00<br>
Total price: 110.00

<br>
Fixed bugs

<br>
Add new functionality: capsules!, with the symbol of Div logo!.... of course!
Now you can create capsules inside the insole to reduce the code and to facilitate<br>
the work with objects and arrangements. A capsule consists on a block that fulfills<br>
the following syntax:
[[variable
... In this section you can use the properties of variable if it is<br>
an object or their keys if it is an array ...
variable]]
For example:

 array(
		"name" =&gt; "Banana",
		"price" =&gt; 20.4
	)
));
...
?&gt;

[[product<br>
Name: {price} <br><br>
product]]
Enjoy!

<br>
Add new feature for iterations functionality: now you can specify a STEP for iteration. 

Variant 1:
[:from,to,var,step:]
Variant 2:
[:from,to,step:]

Template:
[:1,10,2:] {$value} [/]
Output:
1 3 5 7 9

[:1,10,i,2:] {$i} [/]
Output:
1 3 5 7 9

[:10,1,i,2:] {$i} [/]
10 8 6 4 2

<br>
Another way to define the iteration var with high priority. Now the follow templates are similars:
Template 1:
[:1,10,x:] .... [/]
Template 2:
[:1,10:] x =&gt; .... [/]
The follow example shows the priority of this new way:
Template:
[:1,10,x:] y =&gt; {x} [/]
Output:
1 {x} 3 {x} 5 {x} 7 {x} 9 {x}<br>


<br><br><br>
<br>
Added aggregate functions for the lists: sum, avg, min, max, and the default count function
  Now the designer can calculate another statistics from lists, for example:
  index.php

   array(
              array("name" =&gt; "Banana", "price" =&gt; 20.5),
              ....
              ...
              ...                        
      ),
      "values" =&gt; array(10,20,30,40,50,60)
  ));

  ...
  ?&gt;

  index.tpl

  Minimum price: {max:products-price}<br>
Average of prices: {sum:products-price}<br>
Count of products with price: {products-price}
  
  Minimum value: {max:values}<br>
Average of values: {sum:values}    


<br>
Added a new constant constant DIV_CLASS_NAME for define the name of de superclass of div.<br>
Now the programmer can change the name of the div class to avoid possible<br>
collisions the class's names of his application.<br>


<br>
Added a new functionality: default replacements by variable.
  Now the programmer and the designer can define the default replacements for values<br>
by variable. For example:
  Set the default replacement in PHP:
   true));
  ?&gt;
  Or set the default replacement in the template:
  ...<br>
{@["kept", true, "YES"]@}<br>
{@["kept", false, "NO"]@}<br>
...

<br><br><br>
<br>Added a new functionality: pre-processed parts. 
  Now you can pre-processed by div any part in template. The pre-processing<br>
are similar to include, but the pre-processing parse the code before including it.
  Include is: {% part.tpl %}  (include and then parse)<br>
Pre-processing is {} (parse and then include)
  IMPORTANT!: The pre-processing have a priority with regard to the list interations.<br>

<br>Release the 2.1 version
<br><br><br>
<br>
Enable two new properties for PHP developers: $src and $packages.<br>
See the follow example:
  

<br>
If you want that the names of the files have a prefix, specify it in constant<br>
PACKAGES or in the property $__packages of a class that extends the div. See<br>
the following examples:
  Example 1

  
  Example 2

  

<br>
Add new constant DIV_DEFAULT_TPL_FILE_EXT for define a template file extension.<br>
You can define this constant BEFORE include the div.php script. The default value<br>
for this constant is the string "tpl". For example:
  

<br>
Add new constant DIV_DEFAULT_DATA_FILE_EXT for define a data file extension.<br>
You can define this constant BEFORE include the div.php script. The default value<br>
for this constant is the string "json". For example:
  

<br>
Implement the show() method.
  show();

  ?&gt;

<br>
If you don't pass the value of $src for the div class constructor, then<br>
Div assumes that $src is the name of the class :)
 

<br>
Enable the div extends for OOP in the programmer side. The name of the properties<br>
should not begin with __ (double underscore). See the follow example:
  Page.tpl

  
<br><br><br>
<br>Change mixedBool() and parseMatch() methods for trim the string values.
<br><br><br>
<br>
Added a new variable for the cycles: $_order, that is $_index + 1.<br>
The index begins with 0. The order bigins with 1. This is util when you<br>
need build a ordered list without  tag and reused item template. 
 For example:
 The ordered list:

 [$list]<br>
{% reused %}<br>
[/$list]
 The reused template reused.tpl:

 ?_order}. name} Address: {$address}
 On the other hand if you use the following template for reuse.tpl,<br>
the first order number will be hidden and the template is more complicated:
 ?_index} + #). name} Address: {$address}

<br>
Added new variable's modifiers: html and br
  {html:variable} convert all applicable chracters to HTML entities (see the<br>
documentation of htmlentities() PHP function)
  {br:variable} convert all \n to <br>

<br>
Fixed bugs of recursivity and recovered the high priority of variables into the cycles.

<br>
Release the 2.0 Version

<br><br><br>
<br>
Fix some grave bugs of iterations functionality and other improvements.

<br>
Added a new functionalitites:

<br>Custom item variable for lists and mark =&gt;. For example:

  {= clients: [<br>
{<br>
name: 'John',<br>
products: [{name: 'Banana', price: 1.2},{name: 'Potato', price: 1.3}]<br>
}<br>
]<br>
=}
  [$clients] client =&gt;  <br>
[$products]<br>
{name}<br>   <br>
[/$products]<br>
[/$clients]

<br>
Custom item variable for iterations: you now can specify the iteration variable. For example:
  [:1,100,i:]<br>
The current value is {$i}<br>
[/]<br>


<br>
Nested iterations. The following example...
  [:1,10,i:]<br>
[:1,10,j:]<br>
{j} = (# {j} #) <br><br>
[/]<br>
[/]
  ...is similar to:
  ";
  
  ?&gt;

<br>
New variable for iterations and lists's cycle

<br>
$_list, that it contains the list's name.
For example:
  [$products]<br>
{products]
   Div associates a name to each iteration that you define. With this new functionality<br>
you can know the name of the iteration inside the cycle of the iteration.
   Also, if you use the recursion, you can work now with the name of the list thanks to<br>
this new variable that doesn't collapse with a variable inside the cycle.
   For example:
   {= list: "products",<br>
products: [<br>
count: 3,<br>
list: ["Banana", "Potato" , "Rice"]<br>
]<br>
=}
   [{$list}]<br>
{list} that is 'products' ... }--&gt;<br>
{list] }--&gt;<br>
[$list]  &lt;--{ and this list is a list into the parent cycle }--&gt;<br>
{list]<br>
[/{$list}]

<br>
$_item, that it contains the list's item
For example:
  {= products: [<br>
{<br>
name: "Banana",<br>
price: 1.2<br>
},<br>
{<br>
name: "Potato",<br>
price: 1.3<br>
}<br>
] =} 
  [$products]<br>
{_item.price} is similar to {products]<br>


<br>
$_key, that it contains the item's key
  For example:
  [$products]<br>
[$_item] <br>
{value} <br>
[/$_item]<br>
[/$products]





<br>
Release the 1.9 version<br>


<br><br><br>
<br>
Recovering a lost functionality. In version 1.5 to make the algorithms more efficient<br>
we made a mistake and break functionality of the clean the orphan parts. Now in version 1.8<br>
is working again just as quickly.

<br>
Fix some grave bugs.

<br>
Added new funtionalities:

<br>
If a var contain an object, {$var} will be repleace with the count of properties

<br>
Sub matches: now you can write (var:20} to replace this mark with<br>
substr($var, 0, 20);
With this new functionality you can chop a text in half thank<br>
to the formulas, for example:
{text: (# {%text} / 2 #), (# {%text} / 2 #)} 
You can also make use of the variable's modifiers:
{^text: 1} 



<br>
Release the 1.8 version.

<br>Note: The new added features made a little slower the engine. We are working<br>
in the improvement of the algorithms.<br><br>
<br>Recovering a lost functionality. In version 1.5 to improve the algorithms made a<br>
mistake and break functionality of the Formulas. Now in version 1.7 is working again<br>
just as quickly.
<br>Added new functionality for programmers in the constructor of div class with<br>
new parameter: IGNORE SOME VARIABLES. Example:
<br>// ignoring the "name" variable<br>
echo new div("index.tpl", array("name" =&gt; "Salvi", "age" =&gt; 25), array("name"));<br>
<br>Prevent a bugs with length two first parameters as filenames, in the div constructor
<br>Release the 1.7 version
<br><br>
<br>In version 1.5 to improve the algorithms made a mistake and lost functionality<br>
of the iterations of Lists, which is the priority of an item variable under way,<br>
with the same name of a variable outside the loop. Now in version 1.6 is working<br>
again just as quickly.
<br>Release the 1.6 version
<br><br>
<br>
The algorithm was improved. Div is faster now.

<br>
Fixed bugs.

<br>
A new variable's modifier was added to encode URL. For example:
  {&amp;variable}

<br>
Release the 1.5 version

<br><br>
<br>
Fixed bugs of blocks of conditions

<br>
Add new feature named ITERATIONS.
  Example:
  [:1,5:] {$value} [/]
  Output:
  1 2 3 4 5

<br>
Release the 1.4 version

<br><br>
<br>Prevent the errors of formulas
<br>Prevent the errors of conditions
<br>Fix important bug of @else@ mark of conditions into other conditions and conditionals
<br>Release the 1.3 version
<br><br>
<br>The @break@ mark<br>
Add break mark for breaking the loops. The position of<br>
break mark in the block are relevant!
  Example:
  [$products]<br>
{?( {value}<br><br>
[/$products]<br>

<br>Release the 1.2 version
<br><br>
<br>
Fixing some several issues of conditional parts!

<br>
Release the 1.1 version

]]></description><link>https://divengine.org/documentation/div-php-template-engine/changelog/changelog.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/ChangeLog/CHANGELOG.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 21 Jul 2024 00:27:00 GMT</pubDate></item><item><title><![CDATA[Aggregate functions]]></title><description><![CDATA[ 
 <br>The aggregate functions similar to SQL. With this feature you can get some results from list's operations, like as "sum", "average", etc. Think of "aggregate functions" as "list's modifiers", similarly to&nbsp;"variable's modifiers".<br>Syntax in templates<br>
{$function:variable-property}
<br><br>Example<br>index.php<br>&lt;?php
	
echo new div('index.tpl', [
		'blocks' =&gt; [
			['title' =&gt; 'Who is online', 'weight' =&gt; 0, "show" =&gt; true],
			['title' =&gt; 'Last comments', 'weight' =&gt; 1, "show" =&gt; false],
			['title' =&gt; 'Forum topics', 'weight' =&gt; 2, "show" =&gt; true]
		],
		'widths' =&gt; [800, 700, 600, 500]
]);

<br>index.tpl<br>&lt;!--{ array of array/object }--&gt;
	
Minimum weight: {$min:blocks-weight}
Maximum weight: {$max:blocks-weight}
Weight average: {$avg:blocks-weight}
Weight sum: {$sum:blocks-weight}
Showed blocks: {$blocks-weight} or {$count:blocks-weight}
	
&lt;!--{ array of atomic values }--&gt;
	
Minimum weight: {$min:widths}
Maximum weight: {$max:widths}
Weight average: {$avg:widths}
Weight sum: {$sum:widths}
Showed blocks: {$widths}

	
<br>Output<br>Minimum weight: 0
Maximum weight: 2
Weight average: 1
Weight sum: 3
Showed blocks: 2 or 2
	
Minimum weight: 500
Maximum weight: 800
Weight average: 650
Weight sum: 2600
Showed blocks: 4

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/aggregate-functions.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Aggregate functions.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:39:04 GMT</pubDate></item><item><title><![CDATA[Capsules]]></title><description><![CDATA[ 
 <br>An capsule is a part of template for reduce their code, make the template more readable, among other advantages.<br>Syntax in templates<br>
[[varname
	... In this section you can use the properties of variable if it is
	an object or their keys if it is an array ...
varname]]

<br>Example<br>index.php<br>&lt;?php
	
echo new div('index.tpl', array(
	'product' =&gt; [
		'name' =&gt; 'Banana',
		'price' =&gt; 20.5,
		'tax' =&gt; 1.5
	]
]);

<br>index.tpl<br>Product:
	
[[product
		Name: {$name}
		Price: {$price}
		Tax: {$tax}
product]]
	
Similar:
	
		Name: {$product.name}
		Price: {$product.price}
		Tax: {$product.tax}
<br>Output<br>Product:
	
		Name: Banana
		Price: 20.5
		Tax: 1.5
	
Similar:
	
		Name: Banana
		Price: 20.5
		Tax: 1.5

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/capsules.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Capsules.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:35:44 GMT</pubDate></item><item><title><![CDATA[Comments]]></title><description><![CDATA[ 
 <br>Syntax<br>&lt;!--{ inline comment here }--&gt;
	
&lt;!--{ 
	
	Multi-line comment here 
	This multiline comment is not sent to browser.
	
}--&gt;
<br>Example<br>&lt;h1&gt;Hello world&lt;/h1&gt;

&lt;!--{ This is a comment }--&gt;
&lt;span&gt;Powered by Div&lt;/span&gt;
<br>Output<br>
&lt;h1&gt;Hello world&lt;/h1&gt;
&lt;span&gt;Powered by Div&lt;/span&gt;
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/comments.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Comments.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:35:25 GMT</pubDate></item><item><title><![CDATA[Conditional parts]]></title><description><![CDATA[ 
 <br>One of the most commonly used functions in the GUI is to show or hide part of the interface. This is achieved with Div in various ways, and one of them is the use of the conditional parts.<br>Some conditional on the template is defined by a block that begins and ends with the character question tag (?) or exclamation (!) otherwise, accompanied by a variable that must be a boolean value. For example, you can do this in the template:<br>?$showproducts
	... some template here ...
$showproducts?
<br>If the value of "showproducts" is true, it shows the code between both tags. If the value is false or if you not pass the variable "showproducts", that part of code will be hidden.<br>In general, the boolean value is defined by the method&nbsp;div::mixedBool, which takes into account the following criteria:<br>
<br>False if the value is false
<br>False if the value is null
<br>False if the value is not greater than zero
<br>False if is "0"
<br>False if is an empty string
<br>False if is an object without properties
<br>The same value in any other case
<br>Syntax:<br>
For test the var as TRUE:
	
?$var
	... some code here ...
@else@
	... some another code here
$var?
	
For test the var as FALSE:
	
!$var
	... some code here ...
@else@
   ... some another code here
$var!

<br>Example:<br>index.php<br>
echo new div('index.tpl', [
		'products' =&gt; [
			['name' =&gt; 'Banana', 'price' =&gt; 20.5],
			['name' =&gt; 'Potato', 'price' =&gt; 10.8]
		]
]);
<br>index.tpl<br>
Products:
	
?$products
	[$products]
		{$name} - {$price}
	[/$products]
@else@
	No products
$products?
	
Similar result:

!$products
	No products
@else@
	[$products]
		{$name} - {$price}
	[/$products]
$products!

<br>Output<br>Products:
	
Banana - 20.5
Potato - 10.8
	
Similar result:
	
Banana - 20.5
Potato - 10.8
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/conditional-parts.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Conditional parts.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:37:31 GMT</pubDate></item><item><title><![CDATA[Conditions]]></title><description><![CDATA[ 
 <br>The&nbsp;conditions&nbsp;is more complicated than&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/conditions#conditional-parts" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/conditions#conditional-parts" target="_blank">conditional parts</a>. With conditions, you can show conditional parts based on a boolean expression and not only from a boolean value. See the&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/conditions#allowed-php-functions" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/conditions#allowed-php-functions" target="_blank">allowed PHP functions</a>. The expression can be an expression of PHP, blended with code of Div.<br>Syntax:&nbsp;<br>{?( ... expression ... )?}
	
	... some code here ...
	
@else@
	
	... some another code here ...
	
{/?}
<br>Example<br>index.php<br>
echo new div('index.tpl', [
		'products' =&gt; [
			['name' =&gt; 'Banana', 'price' =&gt; 20.5],
			['name' =&gt; 'Potato', 'price' =&gt; 10.8]
		]
]);
<br>index.tpl<br>
{?( {$products} &gt; 0 )?}
		There are {$products} products in the warehouse
@else@
		There are not products in the warehouse
{/?}
<br>Output<br>
There are 2 products in the warehouse

<br>You must understand that the expression in parentheses will be interpreted by the template engine as well. That means the end result of that interpretation must be a valid PHP boolean expression. An example to understand this is when comparing to strings.<br>{?( "{$userRole}" === "guest" )?}
&nbsp; &nbsp; &nbsp; &nbsp; {% loginPage %}
@else@
&nbsp; &nbsp; &nbsp; &nbsp; {% dashboard %}
{/?}
<br>Notice carefully how the $userRole variable substitution is enclosed in quotes.<br>"{$userRole}" === "guest"
<br>This means that when it is substituted for its value, the value will be enclosed in quotes, because you have told the template engine so.<br>"guest" === "guest"
<br>The following would be an error, because the content of the variable would not be enclosed in quotes and would not result in a valid expression for PHP.<br>{$userRole} === "guest"
<br>Output:<br>guest === "guest"
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/conditions.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Conditions.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:37:57 GMT</pubDate></item><item><title><![CDATA[Content like an object (intelligent data)]]></title><description><![CDATA[ 
 <br>The information or content that it is passed to the constructor of the div class, can be an object and/or it can contain objects and you can access to the methods of these objects. The access to those methods to obtain information depends on the context or scope in which is you working.<br>Example: "template scope"<br>index.php<br>&lt;?php
	
include 'div.php';
	
class MyData{
		
	var $values;
	
	function __construct($values){
		$this-&gt;values = $values;
	}
		
	public function implode(){
		return implode(",",$this-&gt;values);
	}
		
}
	
echo new div('index.tpl', new MyData(["A","B","C","D"]));
<br>index.tpl<br>
{= data: -&gt;implode() =}

{$data} 

<br>Output<br>
A,B,C,D

<br>Example: "capsule scope"<br>index.php<br>&lt;?php
	
include 'div.php';
	
// create a class ...
	
class MyString{
		
	var $value;
		
	function __construct($value){
		$this-&gt;value = $value;
	}
		
	public function upper(){
		return strtoupper($this-&gt;value);
	}
		
}
	
// using the class
	
echo new div('index.tpl', array('name' =&gt; new MyString('peter')));

<br>index.tpl<br>
[[name
	  {$value}
	  
	  {= up: -&gt;upper() =}
	  
	  {$up}
name]]
<br>Output<br>
peter
PETER

<br><br>index.tpl<br>
{= up: -&gt;name.upper() =}
{$up}

<br>Output<br>
PETER
<br><br>index.php<br>class Person{
		
	var $first_name;
	var $last_name;
	
	function __construct($first_name, $last_name){
		$this-&gt;first_name = $first_name;
		$this-&gt;last_name = $last_name;
	}
	
	public function getName(){
		return $this-&gt;first_name.' '.$this-&gt;last_name;
	}
	
}

echo new div('index.tpl', [
	'people' =&gt; [
		new Person('John', 'Nash'),
		new Person('Albert', 'Einstein'),
		new Person('Jacque', 'Fresco')
	]
]);
<br>index.tpl<br>
[$people]
	{= complete_name: -&gt;getName() =}
	
	First name: {$first_name}
	Last name: {$last_name}
	Complete name: {$complete_name}
	
[/$people]

<br>Output<br>
First name: John
Last name: Nash
Complete name: John Nash
	
First name: Albert
Last name: Einstein
Complete name: Albert Einstein
	
First name: Jacque
Last name: Fresco
Complete name: Jacque Fresco

<br><a data-href="Hooks" href="https://divengine.org/documentation/div-php-template-engine/features/hooks.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Hooks</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/content-like-an-object-(intelligent-data).html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Content like an object (intelligent data).md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:45:22 GMT</pubDate></item><item><title><![CDATA[Custom modifiers]]></title><description><![CDATA[ 
 <br>The programmers can create new modifiers of variables. For this the programmers should use the static method "addCustomModifier." The modifier can be a function or a static method of class. The modifier function should have a single parameter.<br>Example:<br>index.php<br>&lt;?php
	
include 'div.php';
	
class MyModifiers {
		
	/* The modifier function should have a single parameter. */
	static function upper($value){
		return strtoupper($value);
	}
		
}
	
function lower($value){
	return strtolower($value);
}
	
div::addCustomModifier('upper:', 'MyModifiers::upper');
div::addCustomModifier('lower:', 'lower');
	
echo new div('index.tpl', array('text' =&gt; 'Hello World'));
<br>index.tpl<br>{upper:text}
	
{lower:text}
<br>Output:<br>HELLO WORLD

hello world
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/custom-modifiers.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Custom modifiers.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:31:30 GMT</pubDate></item><item><title><![CDATA[Data formats]]></title><description><![CDATA[ 
 <br>The data formats are <a data-href="Variable's modifiers" href="https://divengine.org/documentation/div-php-template-engine/features/variable's-modifiers.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Variable's modifiers</a> that need more information than a symbol.<br>Date format {Format a timestamp}<br>Syntax in templates<br>{/variable:php-format-date/}
<br>Example<br>index.php<br>echo new div('index.tpl', ['today' =&gt; time()]);
<br>index.tpl<br>Timestamp: {$today}
Today is: {/today:Y-m-d/}
Now is: {/today:h:i:s/}
<br>Output<br>Timestamp: 1341956900
Today is: 2012-07-10
Now is: 05:48:20
<br>Number format<br>Syntax in templates<br>{#variable:decimals separator miles-separator#}
<br>Example<br>index.php<br>echo new div('index.tpl', ['number' =&gt; 2900200.4567]);
<br>index.tpl<br>The number: {$number}
The integer part: {#number:0#}
Two decimals: {#number:2#}
Two decimals and separators: {#number:2,.#}
Two decimals and other separators: {#number:2.'#}
More decimals and other separators: {#number:9|-#}
<br>Output<br>The number: 2900200.4567
The integer part: 2900200
Two decimals: 2900200.46
Two decimals and separators: 2.900.200,46
Two decimals and other separators: 2'900'200.46
More decimals and other separators: 2-900-200|456700000
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/data-formats.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Data formats.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:32:53 GMT</pubDate></item><item><title><![CDATA[Default replacement for a variable]]></title><description><![CDATA[ 
 <br>How to define a default replacement for a specific variable? It is really simple:<br>Syntax in PHP<br>&lt;?php
	
div::selDefaultByVar($varname, $value_to_search, $replace_with, $update);

<br>Syntax in templates<br>
{@ ['varname', value_to_search, replace_with ] @}

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/default-replacement-for-a-variable.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Default replacement for a variable.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:39:37 GMT</pubDate></item><item><title><![CDATA[Default replacements]]></title><description><![CDATA[ 
 <br>Replace some values for another values.<br>Syntax in PHP<br>&lt;?php
	
div::setDefault($value_to_search, $replace_with);

	
<br>Syntax in templates<br>
{@ [value_to_search, replace_with] @}

<br>Example<br>index.php<br>&lt;?php
	
div::setDefault(true, "YES");
	
echo new div("index.tpl", [
		"haveproducts" =&gt; true,
		"havemoney" =&gt; false
]);

<br>index.tpl<br>{@ [false, "NO"] @}
	 
Have products: {$haveproducts}
Have money: {$havemoney}

	
<br>Output<br>
Have products: YES
Have money: NO

<br><a data-href="Default replacement for a variable" href="https://divengine.org/documentation/div-php-template-engine/features/default-replacement-for-a-variable.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Default replacement for a variable</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/default-replacements.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Default replacements.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 16:05:09 GMT</pubDate></item><item><title><![CDATA[Dialect translator]]></title><description><![CDATA[ 
 <br>Div provide a translator for dialects. This translator can translate from any dialect to current dialect. Div use the current template's variables for self help in the translation. For this reason, you only translate having a instance of div.<br>Example<br>index.php<br>&lt;?php
	
include 'div.php';
	
$tpl = new div('index.tpl');
	
$tpl-&gt;translateFrom([
	'DIV_TAG_IGNORE_BEGIN' =&gt; '{literal}',
	'DIV_TAG_IGNORE_END' =&gt; '{/literal}'
]);
	
$tpl-&gt;show();
<br>index.tpl<br>
{= name: "Peter" =}
	
{literal}
	{$name}
{/literal}
	
{$name}

<br>index.tpl (translated)<br>	
{= name: "Peter" =}
	
{ignore}
	{$name}
{/ignore}
	
{$name}
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/dialect-translator.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Dialect translator.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:42:37 GMT</pubDate></item><item><title><![CDATA[Dialects]]></title><description><![CDATA[ 
 <br>You can change the proposed Div tags for templates. By doing this, you are creating a "dialect" for the template language. The dialects can be very useful when you want to zoom in Div language to a known template language or easier to understand by its developers. It can also be useful when you want to process template contains tags similar to Div.<br>The dialect in Div is defined by a set of constants that begin with the prefix DIV_TAG. A dialect have required tags and rules that are verified. You can use the tool&nbsp;<a data-tooltip-position="top" aria-label="http://safe.phpclasses.net/browse/view/html/file/58096/user/rafa3/auth/1476112747-156f9c/name/dialect.html" rel="noopener nofollow" class="external-link" href="http://safe.phpclasses.net/browse/view/html/file/58096/user/rafa3/auth/1476112747-156f9c/name/dialect.html" target="_blank">Div Dialect Creator</a>&nbsp;to create dialects.<br>To create a new dialect you should define the constants before including the file&nbsp;div.php. You are not forced to define all the constants, so alone those that you need to change. The following table show the set of constants that define a dialect in Div.<br><br><a data-href="Multiple dialects" href="https://divengine.org/documentation/div-php-template-engine/features/multiple-dialects.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Multiple dialects</a><br>
<a data-href="Dialect translator" href="https://divengine.org/documentation/div-php-template-engine/features/dialect-translator.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Dialect translator</a><br>
<a data-href="Understanding the syntax" href="https://divengine.org/documentation/div-php-template-engine/features/understanding-the-syntax.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Understanding the syntax</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/dialects.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Dialects.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:43:59 GMT</pubDate></item><item><title><![CDATA[Dynamic vars inside a loop]]></title><description><![CDATA[ 
 <br>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/dynamic-vars-inside-a-loop.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Dynamic vars inside a loop.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:36:42 GMT</pubDate></item><item><title><![CDATA[Formulas]]></title><description><![CDATA[ 
 <br>To make calculations and other advantages. The formula is a valid PHP expression. See the&nbsp;<a data-href="Appendix A - Allowed PHP functions" href="https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-a-allowed-php-functions.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Appendix A - Allowed PHP functions</a><br>Syntax in templates  <br>&nbsp;&nbsp; &nbsp;<br>(# formula #)
    
OR
    
(# formula : number format #)
<br>&nbsp; &nbsp;<br>
The number format are explained in Data formats.<br>Example<br>index.tpl  <br>&nbsp;&nbsp; &nbsp;<br>{= number: 200.000 =}
{=  price:  20.000 =}
{=    tax:   0.345 =}
    
5 + {$number} = (# 5 + {$number} #)
    
Price with tax: ${$price} + ${#tax:2.#} = $(# {$price} + {$tax} :2. #)
<br>&nbsp; &nbsp;&nbsp;<br>
Output<br>5 + 200 = 205
    
Price with tax: $20 + $0.35 = $20.35
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/formulas.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Formulas.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:34:40 GMT</pubDate></item><item><title><![CDATA[Friendly tags]]></title><description><![CDATA[ 
 <br>IDE sometimes detects the code of Div in HTML templates like a syntax error, because they don't have a plugin that identify the syntax of Div. Then, to avoid that it is shown as an error, Div provides two tags to encapsulate its code making it a comment.<br>Syntax in templates<br>
&lt;!--| ... some Div code here ... |--&gt;

<br>Example<br>index.tpl<br>
This:
	
&lt;!--| [$products] |--&gt;
	Name: {$name}
	Price: {$price}
&lt;!--| [/$products] |--&gt;
	
Is equal to:
	
[$products]
	Name: {$name}
	Price: {$price}
[/$products]

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/friendly-tags.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Friendly tags.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:51:50 GMT</pubDate></item><item><title><![CDATA[Global vars]]></title><description><![CDATA[ 
 <br>The global variables conserve their value and they are independent of the instances of the div class.<br>Syntax in PHP<br>&lt;?php
	
div::setGlobal('var-name', $mixed_value);

<br>Example<br>index.php<br>&lt;?php
	
div::setGlobal('today', date('Y-m-d'));
	
echo new div('index.tpl', [
	'name' =&gt; 'Peter'
]);
	
echo new div('index.tpl', [
		'name' =&gt; 'Jack'
]);

<br>index.tpl<br>
Hello {$name}
Today is: {$today}

<br>Output<br>
Hello Peter
Today is 2012-08-17
	
Hello Jack
Today is 2012-08-17

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/global-vars.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Global vars.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:38:33 GMT</pubDate></item><item><title><![CDATA[Hooks]]></title><description><![CDATA[ 
 <br>The hooks are methods that can be implemented by the programmer in a class that inherit from div. This methods will be executed by div in some events. For example, before or after parse of template.<br>At the moment, the hooks are&nbsp;beforeBuild,&nbsp;afterBuild,&nbsp;beforeParse&nbsp;and&nbsp;afterParse. In the&nbsp;beforeBuild&nbsp;hook, you can modify the&nbsp;$src&nbsp;and&nbsp;$items&nbsp;optional parameters of the div constructor.<br>Example:<br>index.php<br>	
class Page extends div{
	
	public function beforeBuild(&amp;$src = null, &amp;$items = null){
		$this-&gt;title = 'Hello World';
		$items['body'] = 'This is the hook!'; 
	}
	
}

echo new Page('index.tpl');

<br>index.tpl<br>
&lt;h1&gt;{$title}&lt;/h1&gt;
&lt;p&gt;{$body}&lt;/p&gt;

<br>Output<br>
&lt;h1&gt;Hello World&lt;/h1&gt;
&lt;p&gt;This is the hook!&lt;/p&gt;

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/hooks.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Hooks.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:45:10 GMT</pubDate></item><item><title><![CDATA[HTML to plain text]]></title><description><![CDATA[ 
 <br>Syntax:<br>{txt}
	... some html code here ...
{/txt}
	
{txt} width =&gt;
	... some html code here ...
{/txt}
<br>Example<br>{txt} 
	
&lt;h1&gt;Document title&lt;/h1&gt;
	
{/txt}
<br>Output:<br>Document title
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/html-to-plain-text.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/HTML to plain text.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:36:06 GMT</pubDate></item><item><title><![CDATA[Ignored parts (escaping Div parsing)]]></title><description><![CDATA[ 
 <br>The way of define a part of the template and ignore their code.<br>Syntax in templates<br>{ignore}
&nbsp;&nbsp; &nbsp;
... some ignored code here ...
&nbsp;&nbsp; &nbsp;
{/ignore}
<br>Example<br>index.php<br>echo new div('index.tpl', ['name' =&gt; "Peter"]);
<br>index.tpl<br>{ignore}

Name: {$name}

{/ignore}
<br>Output<br>Name: {$name}
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/ignored-parts-(escaping-div-parsing).html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Ignored parts (escaping Div parsing).md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:35:10 GMT</pubDate></item><item><title><![CDATA[Including another templates]]></title><description><![CDATA[ 
 <br>A complex design, require split of the template. Then you can include the design's parts in a container template.<br>Syntax in templates<br>
{% var with path to the template's part %}
	
OR
	
{% path/to/the/template/part %}

<br>Example<br>part.tpl<br>Hello world!
<br>index.tpl<br>
This is the container template:
	
{% part %}

<br>Output<br>
This is the container template:
	
Hello world!

<br>Important:<br>The engine does not accept that a template is included itself.]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/including-another-templates.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Including another templates.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:45:26 GMT</pubDate></item><item><title><![CDATA[Including pre-processed templates]]></title><description><![CDATA[ 
 <br>Similar to&nbsp;<a data-href="Including another templates" href="https://divengine.org/documentation/div-php-template-engine/features/including-another-templates.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Including another templates</a>, but in this case, first the engine parse the template, and then include it.<br>Syntax in templates<br>
{%% var with path to the template's part %%}
	
OR
	
{%% path/to/the/template/part %%}

<br>Example<br>index.php<br>&lt;?php
	
echo new div('test.tpl', [
	'name' =&gt; 'Unnamed',
	'products' =&gt; [
		['name' =&gt; 'Banana'],
		['name' =&gt; 'Potato']
	]
]);

<br>index.tpl<br>	
Include:
	
[$products]
	{% part %}
[/$products]
	
Preprocessed:
	
[$products]
	{%% part %%}
[/$products]

<br>part.tpl<br>
{$name}

<br>Output<br>
Banana
	
Potato
	
Unnamed
	
Unnamed
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/including-pre-processed-templates.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Including pre-processed templates.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:40:22 GMT</pubDate></item><item><title><![CDATA[Iterations]]></title><description><![CDATA[ 
 <br>This feature is for perform a N iterations of a loop. The iterations are loops that increment a variable in each cycle. The value of this variable can be accessed by&nbsp;$value. You can also specify the name of the variable and the steps of the increments.<br>Syntax:<br>[:from,to,var,step:]
	... some code here ...
[/]
<br>Example:<br>index.tpl<br>
[:1,10:] {$value} [/]
[:1,10,x:] {$x} [/]
[:1,10,x,2:] {$x} [/]
<br>Output:<br> 1  2  3  4  5  6  7  8  9  10 
 1  2  3  4  5  6  7  8  9  10 
 1  3  5  7  9 
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/iterations.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Iterations.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:37:07 GMT</pubDate></item><item><title><![CDATA[Lists (loops)]]></title><description><![CDATA[ 
 <br>With a list you can repeat some part of template code and work with each item of the list.<br>Syntax:<br>
[$listvar]
	   ... some code here ... 
@empty@
   ... some code when the list is empty ...
[/$listvar]
<br>Example:<br>
echo new div('index.tpl', array(
	'employees' =&gt; [
		'Rafa',
		'Peter',
		'John'	
	],
	'products' =&gt; []
]);
<br>index.tpl<br>Employees:
	
[$employees]
	{$value}
[/$employees]
	
Products:
	
[$products]
	{$name}
@empty@
    Empty list of products!
[/$employees]
<br>Output:<br>Employees:
	
Rafa
Peter
John
	
Products:
	
Empty list of products!
<br><a data-href="Dynamic vars inside a loop" href="https://divengine.org/documentation/div-php-template-engine/features/dynamic-vars-inside-a-loop.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Dynamic vars inside a loop</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/lists-(loops).html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Lists (loops).md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:36:52 GMT</pubDate></item><item><title><![CDATA[Locations]]></title><description><![CDATA[ 
 <br>The locations are tags that identify some positions into template. With this feature you can define a location in any part of the template, and then collocate any content in this location. The tag that represent the location can be repeated in other positions. Also, you can locate several template pieces in the same location.<br>Now you can separate two concepts: the content from their location in the template. This advantage can be resolved with&nbsp;<a data-href="Simple replacements" href="https://divengine.org/documentation/div-php-template-engine/features/simple-replacements.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Simple replacements</a> of &nbsp;<a data-href="Template's variables" href="https://divengine.org/documentation/div-php-template-engine/features/template's-variables.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Template's variables</a> but this is not sufficient and it is not equal.<br>Syntax<br>Define the location:
	
(( location_name ))
	
Define the content:
	
{{location_name
	
... some content here ...
	
location_name}}
<br>Example<br>layout.tpl<br>&lt;html&gt;
	&lt;body&gt;
		&lt;div id="header"&gt;(( header ))&lt;/div&gt;
		&lt;div id="content"&gt;(( content ))&lt;/div&gt;
		&lt;div id="footer"&gt;(( footer ))&lt;/div&gt;
	&lt;/body&gt; 
&lt;/html&gt;
<br>index.tpl<br>{% layout %}
	
{{header
	This is the header
header}}
	
{{footer
	This is the footer
footer}}
	
{{content
	This is the content
content}}
	
{{header
	&lt;br/&gt;.... more in the header .....
header}}

<br>Output<br>&lt;html&gt;
	&lt;body&gt;
		&lt;div id="header"&gt;This is the header&lt;br/&gt;.... more in the header .....&lt;/div&gt;
		&lt;div id="content"&gt;This is the content&lt;/div&gt;
		&lt;div id="footer"&gt;This is the footer&lt;/div&gt;
	&lt;/body&gt; 
&lt;/html&gt;
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/locations.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Locations.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:50:35 GMT</pubDate></item><item><title><![CDATA[Macros]]></title><description><![CDATA[ 
 <br>A macro is a restricted PHP code dedicated to execute the design's complex tasks. For this reason, Div assures that the PHP code will be not intrusive or insecure.<br>Syntax<br>&lt;?

// ... some PHP code here ...
	
?&gt;
<br>Example<br>index.php<br>&lt;?php
	
include 'div.php';
	
class page extends div{
		
	public function upper($str){
		return strtoupper($str);
	}
}
	
echo new page('index.tpl', [
	'products' =&gt; ['Banana', 'Potato']
]);
<br>index.tpl<br>
{= text: "hello" =}
	
{$text}
	
&lt;? 
		// upper() is a method of current class
		$text = upper($text); 
?&gt;
	
{$text}
	
Products:
	
&lt;? 
	
	$i = 0; 
	
	foreach($products as $product) {
		$i++;
		echo "$i - $product\n";
	}
	
?&gt;
	
They are {$i} products 
	
<br>Output<br>hello
	
HELLO
	
Products:
	
1 - Banana
2 - Potato
	
They are 2 products
<br><br>
<br>It is not allowed to use&nbsp;$this&nbsp;or&nbsp;self
<br>It is only allowed to use&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/macros#allowed-php-functions" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/macros#allowed-php-functions" target="_blank">some functions of PHP</a>&nbsp;by default. You can enable the use of another function through the method&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/macros#div-methods" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/macros#div-methods" target="_blank">setAllowedFunction</a>.
<br>It is not allowed to create functions neither classes.
<br>It is not allowed to include other script.
<br><br>
<br>Create new template's variables
<br>Change the value of any template's variable
<br>ECHO any content (take care of not provoking an infinite loop)
<br>Use the allowed methods of div as a functions:

<br>asThis
<br>atLeastOneString
<br>getCountOfParagraphs
<br>getCountOfSentences
<br>getCountOfWords
<br>getLastKeyOfArray
<br>getRanges
<br>htmlToText
<br>isArrayOfArray
<br>isArrayOfObjects
<br>isCli
<br>isNumericList
<br>isString
<br>jsonDecode
<br>jsonEncode
<br>mixedBool


<br>Use the methods of current class without restrictions if it is a&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/macros#oop" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/macros#oop" target="_blank">class that extends div</a>
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/macros.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Macros.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:43:10 GMT</pubDate></item><item><title><![CDATA[Multi replacements]]></title><description><![CDATA[ 
 <br>Replace X with Y.<br>Syntax in templates<br>
{:varname}
		... some code here ...	
{:/varname}

<br>The variable should be an array where each item of array is an array with 3 element:&nbsp;string to search,&nbsp;string to replace&nbsp;and&nbsp;use or not regular expressions.<br>Example<br>index.php<br>&lt;?php
	
echo new div('index.tpl', [

		/* str_replace */
		'customtags' =&gt; [
			['[b]', '&lt;b&gt;'],
			['[/b]', '&lt;/b&gt;']
		],

		/* preg_replace */
		'highlight' =&gt; [
			['/\*.*\*/', '&lt;span class = "comment"&gt;$0&lt;/span&gt;', true]
		]
]);
<br>index.tpl<br>{= htmlfix: [
	['&lt;b&gt;','&lt;strong&gt;']
	['&lt;/b&gt;','&lt;/strong&gt;']
] =}
	
{:customtags}
{:htmlfix}
	
[b]Hello World[/b]
	
{:/htmlfix}
{:/customtags}
	
{:highlight}
	
/* this is a PHP comment */
	
{:/highlight}

<br>Output<br>
&lt;strong&gt;Hello World&lt;/strong&gt;
	
&lt;span class = "comment"&gt;/* this is a PHP comment */&lt;/span&gt;

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/multi-replacements.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Multi replacements.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 16:02:35 GMT</pubDate></item><item><title><![CDATA[Multiple dialects]]></title><description><![CDATA[ 
 <br>With the&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/custom-dialects/multiple-dialects#template-property" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/custom-dialects/multiple-dialects#template-property" target="_blank">template's property</a>&nbsp;@__DIALECT you can specify the dialect for current template source. This dialect should be written in a separeted file with JSON code. For example:<br>Example<br>index.tpl<br>@_DIALECT = smarty.dialect
{* this is a comment *}
Name: {$name}
{literal}
{$name}
{/literal}
{% other %}
<br>other.tpl<br>@_DIALECT = twig.dialect
{{ foo.bar }}
<br>smarty.dialect<br>{
  'DIV_TAG_IGNORE_BEGIN': '{literal}',
  'DIV_TAG_IGNORE_END': '{/literal}',
  'DIV_TAG_COMMENT_BEGIN': '{*',
  'DIV_TAG_COMMENT_END': '*}'
}
<br>twig.dialect<br>{
  'DIV_TAG_REPLACEMENT_SUFFIX': ' }}',
  'DIV_TAG_MODIFIER_SIMPLE': '{ '
}
<br>index.php<br>&lt;?php
	
include "div.php";
	
echo  new div("index.tpl", [
	'name' =&gt; 'Peter',
	'foo' =&gt; [
		'bar' =&gt; 45
	]
]);
<br>Output<br>Name: Peter
	
{$name}
	
45
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/multiple-dialects.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Multiple dialects.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:42:17 GMT</pubDate></item><item><title><![CDATA[Multiple variable's modifiers]]></title><description><![CDATA[ 
 <br>Syntax:<br>{$varname|modifier1|modifier2|modifier3|...|}
<br>Example:<br>index.tpl<br>{= word: "ABCDEFG" =}
		
{$word|0,3|}
{$word|0,3|_|}
{$word|0,3|_|^|}
{$word|0,3|_|^|~2|}
<br>Output:<br>ABC
abc
Abc
Ab
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/multiple-variable's-modifiers.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Multiple variable's modifiers.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:31:57 GMT</pubDate></item><item><title><![CDATA[Object Oriented Programming]]></title><description><![CDATA[ 
 <br>In this section you can learn how the programmer can create classes that inherits from the&nbsp;div&nbsp;class.<br>The constructor should respect the parent's constructor. Change the default constructor is not recommended. IMPORTANT: The recommended way for do something before build is the implementation of&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/docs/div-php-template-engine/features/object-oriented-programming#hooks" rel="noopener nofollow" class="external-link" href="https://divengine.org/docs/div-php-template-engine/features/object-oriented-programming#hooks" target="_blank"><strong></strong>&nbsp;hook</a>beforeBuild().<br>&lt;?php
	
include 'div.php';

use divengine\div;
	
class MyPage extends div{
		
	/* IMPORTANT: Change the default constructor is not recommended */
	public function __construct($src = null, $items = [], $ignored = []){
			
		/*.. some code here */
			
		parent::__construct($src, $items, $ignored);
	}
		
	/* IMPORTANT: The recommended way for do something before              */ 
	/* construct the object is the implementation of beforeBuild() hook.   */	
	
	public function beforeBuild(&amp;$src = null, &amp;$items = null, &amp;$ignore =[]){
			
		// something to do before build the object
			
	}
		
	/* ... custom methods here... */
		
}

<br>Example:<br>index.php<br>&lt;?php
	
class MyPage extends div{
		
	public function getProducts(){
		return [
			[
				'name' =&gt; 'Banana',
				'price' =&gt; 20	
			],
			[
				'name' =&gt; 'Potato',
				'price' =&gt; 30
			]
		];
	}
		
	public function sum($x, $y){
		return $x + $y;
	}
		
}
<br>index.tpl<br>
{= products: -&gt;getProducts() =}
{= result: -&gt;sum(20,30) =}
	
[$products] 
		{$name} 
[/$products]
	
{$result}

<br>Output<br>
Banana
Potato
	
50

<br>The arrow symbol used to get a method's result in the template example, can not be changed with a custom dialect. Is a strict rule in Div.<br><a data-href="The __toString magic method" href="https://divengine.org/documentation/div-php-template-engine/features/the-__tostring-magic-method.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>The __toString magic method</a><br>
<a data-href="Content like an object (intelligent data)" href="https://divengine.org/documentation/div-php-template-engine/features/content-like-an-object-(intelligent-data).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Content like an object (intelligent data)</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/object-oriented-programming.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Object Oriented Programming.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:45:57 GMT</pubDate></item><item><title><![CDATA[Pre-defined sub-parsers]]></title><description><![CDATA[ 
 <br>Div provide pre-defined sub-parsers. See the next list:<br>
<br>{parse} ... {/parse}: Make a pre-proccess of enclosed code. This means that a new instance of div will be created, similar to the loops and the capsules.
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/pre-defined-sub-parsers.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Pre-defined sub-parsers.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:52:33 GMT</pubDate></item><item><title><![CDATA[Simple replacements]]></title><description><![CDATA[ 
 <br>A simple replacement is the replacement of parts of the template with any content. The variable can be contain a mixed value:<br>
<br>If the value is a string, the replacement is the string.
<br>If the value is a number, the replacement is the "number".
<br>If the value is an array, the replacement is the length of the array.
<br>If the value is an object without __toString method implemented, the replacement is the count of properties of the object.
<br>Syntax in templates<br>{$varname}
<br>Example:<br>index.php<br>&lt;?php
	
include 'div.php';
	
echo new div('index.tpl', [
	'first_name' =&gt; 'Peter',
	'last_name' =&gt; 'Pan'
]);
<br>index.tpl<br>First name: {$first_name}
Last name: {$last_name}
<br>Output<br>First name: Peter
Last name: Pan
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/simple-replacements.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Simple replacements.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:09:34 GMT</pubDate></item><item><title><![CDATA[Special replacements]]></title><description><![CDATA[ 
 <br>Tags for output special characters that can be used always. The following table show the available tags and their replacements:<br><br>Example:<br>index.tpl<br>Hello{\n}Peter
{\t}Today is {/div.now:Y-m-d/}
<br>Output<br>Hello
Peter
		Today is 2013-07-24
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/special-replacements.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Special replacements.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:58:53 GMT</pubDate></item><item><title><![CDATA[String's dissection]]></title><description><![CDATA[ 
 <br>The scalar values as a complex values. All the scalar values can be used as a strings. Then, the strings can be used like complex values, that is to say, as group of characters. For example:<br>{= name: "Peter" =}
	  
&lt;!-- Show the first character --&gt;
{$name.0} 
	  
&lt;!-- Show the second character --&gt;
{$name.1}
	  
{= x: 537 =}
	  
&lt;!-- Show the first digit --&gt;
{$x.0} 
	  
&lt;!-- Show the second digit --&gt;
{$x.1}
	    
&lt;!-- Spacify the name --&gt;
[$name]{$value} [/$name]
	  
&lt;!-- Multiply the digits of x --&gt;
[$x] {$value} * [/$x] = (# [$x] {$value} * [/$x] 1 #)
<br>Output<br>P
	 
e
	  
5
	
3
	
P e t e r
	  
5 * 3 * 7 = 105
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/string's-dissection.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/String's dissection.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:09:11 GMT</pubDate></item><item><title><![CDATA[Strip or clean the resulting code]]></title><description><![CDATA[ 
 <br>Clean the resulting code of the parser, eliminating double spaces, unnecessary new lines, etc.<br>Syntax in templates<br>
{strip}
	... some ugly code here ...
{/strip}

<br>Example<br>index.tpl<br>{strip}
Hello Jack, ...
	
          ...the previous lines are of more.
{/strip}
<br>Output<br>Hello Jack, ...
...the previous lines are of more.
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/strip-or-clean-the-resulting-code.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Strip or clean the resulting code.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:48:34 GMT</pubDate></item><item><title><![CDATA[Sub-parser's events]]></title><description><![CDATA[ 
 <br>Each sub-parser is processed in some different moments. At the moment, the events are: beforeParse, afterInclude and afterParse. Now in the templates's code you can specify when a sub-parser will be executed. The moment, or the event, can be specified in the template as following example:<br>index.tpl<br>{= name: "Peter" =}
{= products: [
	{
		name: "banana",
		price: 40
	},
	{
		name: "potato",
		price: 25
	}
] =}
	
[$products]
	{parse:beforeParse}
	Name: {$name}
	{/parse:beforeParse}
		
	Product name: {$name}
		
	{% other %}
[/$products]

<br>other.tpl<br>{parse:beforeParse}
	Other name: {$name}
{/parse:beforeParse}
<br>Output<br>Name: Peter
Product name: banana
Other name: banana
Name: Peter
Product name: potato
Other name: potato
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/sub-parser's-events.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Sub-parser's events.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:52:53 GMT</pubDate></item><item><title><![CDATA[Sub-parsers]]></title><description><![CDATA[ 
 <br>The sub-parsers are parsers that run before the main parser of div, like as <a data-href="Ignored parts (escaping Div parsing)" href="https://divengine.org/documentation/div-php-template-engine/features/ignored-parts-(escaping-div-parsing).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Ignored parts (escaping Div parsing)</a>&nbsp;. The custom sub-parsers are built by the programmer to perform&nbsp;pre-processing&nbsp;part of the template. The PHP implementation can be a function or static method. If you have implemented&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/custom-sub-parsers#oop" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/custom-sub-parsers#oop" target="_blank"><strong></strong></a>a class that inherits from div, and uses it to process your templates, then the sub-parser can be implemented in any method of that class.<br>For security reasons, the sub-parsers implemented as functions and static methods, must be registered prior to processing the template with&nbsp;div::setSubParser()&nbsp;method. Each sub-parser receive the template code to process and optionally the information provided to the engine. The string returned by the sub-parser will replace the content between pre-parse's tags.<br>Syntax in templates<br>{sub-parser-name}
	
	... this code will be sent to the sub-parser function/method ...
	
{/sub-parser-name}

	
<br>Example<br>index.php<br>&lt;?php 
	
include "div.php";
	
/* Sub-parser as a function */
function literal($code){
	return "{ignore}$code{/ignore}";
}
	
/* Sub-parser as a function more complex */
function body($code, &amp;$items){
	$items['body'] = '&lt;p&gt;'.$code.'&lt;/p&gt;';
	return "";
}
	
/* Sub-parser as a method */
class MyPage extends div{
		
	/* You can set the sub-parsers in the constructor */
	public function beforeBuild(){
		
		// Sub-parser with their name different to the name of function  
		self::setSubParser('combobox', 'buildCombobox');
	}
		
	/* A sub-parser ... */
	public function buildCombobox($properties){
			
		$prop = self::jsonDecode('{'.$properties.'}');
			
		$html = "&lt;select name = \"{$prop-&gt;name}\"&gt;\n";
		foreach($prop-&gt;options as $option) {
			$html .= "&lt;option value=\"{$option-&gt;v}\"&gt;{$option-&gt;c}&lt;/option&gt;\n";
		}
		$html .= "&lt;/select&gt;\n";
			
		return $html;
	}
		
	/* Other sub-parser */
	public function upperthis($text, &amp;$items){
		$text = trim($text);
		if (self::issetVar($text, $items)) {
			$items[$text] = strtoupper($items[$text]);
		}
	}
}
	
/* Set sub-parsers before */
	
/* Same as MyPage::setSubParser("literal", "literal"); */
MyPage::setSubParser('literal');
	           
/* Alias for 'literal' */ 
MyPage::setSubParser('noparse','literal'); 
	
/* Name of sub-parser equal to name of function */
MyPage::setSubParser('body');              
	
/* Similar way ... */
div::setSubParser('upperthis');
	
echo new MyPage('index.tpl');

<br>index.tpl<br>{body}
	Hello world, this is my first sub-parser
{/body}
	
{combobox}
    name: 'cboCities',
    options: [
        {v: 'NY', c: 'New York'}, 
        {v: 'PA', c: 'Paris'},
        {v: 'TK', c: 'Tokio'}
    ]
{/combobox}
	
{upperthis}body{/upperthis}
	
{$body}
	
{literal}
  {$body}
{/literal}

<br>Output<br>&lt;select name = "cboCities"&gt;
  &lt;option value="NY"&gt;New York&lt;/option&gt;
  &lt;option value="PA"&gt;Paris&lt;/option&gt;
  &lt;option value="TK"&gt;Tokio&lt;/option&gt;
&lt;/select&gt;
	
&lt;P&gt;
	HELLO WORLD, THIS IS MY FIRST SUB-PARSER
&lt;/P&gt;
	
{$body}

<br><a data-href="Pre-defined sub-parsers" href="https://divengine.org/documentation/div-php-template-engine/features/pre-defined-sub-parsers.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Pre-defined sub-parsers</a><br>
<a data-href="Sub-parser's events" href="https://divengine.org/documentation/div-php-template-engine/features/sub-parser's-events.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Sub-parser's events</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/sub-parsers.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Sub-parsers.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:53:29 GMT</pubDate></item><item><title><![CDATA[System vars]]></title><description><![CDATA[ 
 <br><br>Some system vars are available in the templates. This vars are provided by the engine. The following table shows the system vars:<br><br>Now then, all the variables of the system are not enabled by default. The system vars enabled by default are&nbsp;div.now,&nbsp;div.version,&nbsp;div.get&nbsp;and&nbsp;div.post.<br>If you need enable some system vars use the method&nbsp;div::enableSystemVar($varname). If you need disable a system var use the method&nbsp;div::disableSystemVar($varname).<br>Example<br>index.php<br>&lt;?php
	
session_start();
	
include 'div.php';
	
div::enableSystemVar('div.session');
	
if (isset($_GET['user'])){
	if ($_GET['user'] == 'peter'){
		$_SESSION['user'] = $_GET['user'];
	}
}
	
echo new div('index.tpl');

<br>index.tpl<br>
?$div.session.user
	?$div.get.user
		- Welcome {$div.get.user}
	@else@
	 	- Access denied for user {$div.session.user}
	 	- Show the login form
	$div.get.user?
@else@
	Show the login form
$div.session.user?

<br>Output<br>Testing the script with&nbsp;index.php?user=peter&nbsp;in the URL.<br>Welcome peter
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/system-vars.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/System vars.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:46:53 GMT</pubDate></item><item><title><![CDATA[Template's documentation]]></title><description><![CDATA[ 
 <br>Div provides a functionality that create a documentation of your templates. The template's documentation is written in the comments with a specific syntax, similar to some programming languages. In each comment's line, the parser recognizes the documentation's properties and their values . The documentation's properties begin with @. See the example.<br>Now, a specific or restricted list of properties not exists. All the properties that you want to write in the comments will be saved by the parser. After parsing, getDocs returns the saved documentation's properties. With this information and a template, you can build the documentation that you want.<br>Now, don't invent the wheel. Use getDocsReadable method and obtain a readable documentation based on the saved properties and a template provided by Div. You can specify a custom template.<br>Important, the template given by Div if it is prepared to recognize certain properties that are listed now:<br><br>Syntax in templates<br>&lt;--{ 
	
	... unsaved content here ....
	
	@fist_saved_property value
	@other_property value
	@other_property value
	@other_property value
	@multiline_property: line1
		                     line2
		                     line3
	@other_multiline_property: 
	line1
	line2
	line3	
	...
		
}--&gt;
<br>Example<br>index.tpl<br>&lt;--{ 
	
	The next comments are the documentation of this template
	
	@name My template
	@description My first template with documentation
	@author Me 
	@vars: required string title
	       optional string body 
		
		@example:
		{= title: "My first blog" =}
		{= body: "This is my first blog" =}
		{% blog.tpl %}
		
}--&gt;
<br>index.php<br>&lt;?php
	
include 'div.php';
	
div::docsOn();
	
$tpl = new div('index.tpl');
$tpl-&gt;parse();
	
echo $tpl-&gt;getDocsReadable();
]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/template's-documentation.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Template's documentation.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:47:28 GMT</pubDate></item><item><title><![CDATA[Template's properties]]></title><description><![CDATA[ 
 <br>Each template can have properties and the designer is responsible for establishing them. The properties apply only to the file where they are defined.<br>The properties are defined in a single line using the following syntax:<br>@_property_name = property's value
<br>For example, the following code sets the dialect of the template, where the value is the name of the file containing the dialect.<br>@_DIALECT = smarty.dialect
<br>Properties are identified by the prefix&nbsp;@_.]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/template's-properties.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Template's properties.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:47:47 GMT</pubDate></item><item><title><![CDATA[Template's variables]]></title><description><![CDATA[ 
 <br>This feature is dedicated to designers. The designers can declare variables in the template and to use them for different reasons.<br>The&nbsp;values&nbsp;of variables can be:<br>
<br>A string
<br>Another var
<br>An object or an array in JSON
<br>A call to method of the current PHP class
<br>The path of JSON file
<br>Important:If the value is not valid JSON, it will be considered as a template and will be parsed before decoding. See the next sequence:<br>1. Value is not valid JSON: {= digits: [[:0,8:]{$value},[/]9] =}
2. Value was parsed:        {= digits: [0,1,2,3,4,5,6,7,8,9] =}
3. Now "digists" is an array.
4. Replacement:             {$digits} &lt;!--{ OUTPUT "10" }--&gt;
<br>See the difference:<br>1. Value is valid JSON:     {= digits: "[[:0,8:]{$value},[/]9]" =}
2. Value was not parsed:    {= digits: "[[:0,8:]{$value},[/]9]" =}
3. Now "digists" is an string.
4. Replacement:             {$digits} &lt;!--{ OUTPUT "[0,1,2,3,4,5,6,7,8,9]" }--&gt;
<br>Syntax:<br>{= varname: ... value ... =}
	
A string
	
{= varname: some string here =}
	
An array in JSON
	
{= varname: [item1, item2, .... ] =}
	
An object in JSON
	
{= varname: {
		prop1: value1,
		prop2: value2,
		...
} =}
	
Get the value of another var
	
{=  var1: value1 =}
{=  var2: $var1 =}
	
Call to method of current PHP class
	
{= sum: -&gt;sum(20,30) =}
	
<br>See also&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/features/templates-variables#oop" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/features/templates-variables#oop" target="_blank">OOP section.</a><br>The dollar symbol used to get a variable's value in the JSON, is not the modifier in simple replacements (DIV_TAG_MODIFIER_SIMPLE). This symbol can not be changed with a custom dialect. Is a strict rule in Div.<br>Example:<br>index.php<br>
echo new div('index.tpl', [
	'price' =&gt; 40
]);
<br>index.tpl<br>
{= price: 20 =} 
	
Price: {$price}
	
{= labels: ['A','B','C','D'] =}
	
Labels: [$labels] {$value}!$_is_last, $_is_last! [/$labels]
	
{= product: {
		name: "Potato",
		price: 45
	} =}
	
Product: {$product.name}
	
Product's price: {$product.price}
	
{= somestring: Blah blah blah =}
	
String: {$somestring}
	
{= somevar: $price =}
	
Some var: {$somevar}
<br>Output:<br>Price: 40
	
Labels: A, B, C, D

Product's price: Potato
	
Price: 45
	
String: Blah blah blah
	
Some var: 40
<br><br>To protect the value of a teplate's variable, type an asterisk (*) before the variable's name:<br>
{= *protectedvar: "protected value" =}

<br>Protect a template's variable means that after this protection, any intent of changing its value will be failed.<br><br>If you have a external template and its content is needed into a variable, the next trick can help you:<br>
{= varname: {% external-template %} =}

<br>The "external content" are loaded "on demand". This means that the content will be loaded in first replacement of variable.]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/template's-variables.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Template's variables.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:48:35 GMT</pubDate></item><item><title><![CDATA[The __toString magic method]]></title><description><![CDATA[ 
 <br>If an object has implemented the method toString, you can work with the object as a character string in three possible scopes: template's scope, loop body's scope and capsule's scope. You can use two possible variables to put the content returned by the implemented toString() method:<br>
<br>The variable&nbsp;$_to_string&nbsp;in template's scope.
<br>The variables&nbsp;$_to_string&nbsp;and&nbsp;$value&nbsp;in capsule and loop's body scopes.<br>

<br>Suppose that you have the following class:<br>Person.php<br>	
class Person{
		
	public function __construct($first_name, $last_name){
		$this-&gt;first_name = $first_name;
		$this-&gt;last_name;
	}
		
	public function __toString(){
		return $this-&gt;first_name." ".$this-&gt;last_name;
	}
	
}

<br>Then, the following examples show the use of the variables:<br>Example 1: Template's scope<br>index.php<br>
	
include 'div.php';
	
include 'Person.php';
	
echo new div('index.tpl', new Person("Albert", "Einstein"));

<br>index.tpl<br>
{$_to_string}

<br>Outpput<br>
Albert Einstein

<br>Example 2: Loop body's scope<br>index.php<br>&lt;?php
	
include 'div.php';
	
include 'Person.php';
	
echo new div('index.tpl', [
		"persons" =&gt; [
			new Person("Albert", "Einstein"),
			new Person("John", "Nash")
		]
));

<br>index.tpl<br>
If Person not have a $value property:
	
[$persons]
	{$value}
[/$persons]
	
You can always use the variable $_to_string:
	
[$persons]
	{^^^_to_string}
[/$persons]

<br>Output<br>
If Person not have a $value property:
	
	Albert Einstein
	John Nash
	
You can always use the variable $_to_string:
	
	ALBERT EINSTEIN
	JOHN NASH

<br>Example 3: Capsule's scope<br>index.php<br>&lt;?php
	
include 'div.php';
	
include 'Person.php';
	
echo new div('index.tpl', [
	"person" =&gt; new Person("Albert", "Einstein")
]);

<br>index.tpl<br>
[[person
	
 {$_to_string}
	
 {^^^value}
	
person]]

<br>Output<br>
Albert Einstein
	
ALBERT EINSTEIN

]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/the-__tostring-magic-method.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/The __toString magic method.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:44:03 GMT</pubDate></item><item><title><![CDATA[Understanding the syntax]]></title><description><![CDATA[ 
 <br>Div parse the template language locating some syntax structures that have rules. In this section the structures and their rules are explained.<br><br><img alt="Pasted image 20240128115015.png" src="https://divengine.org/lib/media/pasted-image-20240128115015.png"><br><br>The rigid blocks are those that are compound for a rigid syntaxis with prefix and a suffix. The rigid syntax is that in the one that each character has a meaning for the interpreter, in such way that characters are not allowed of more. That is to say, characters like the space (chr(32)), the tabs (\t) and the new lines (\n), that allow to beautify the code, won't be ignored by the interpreter and it will consider them like part of their syntactic analysis. In this blocks, the prefix and the suffix are required.<br>For example, if you write&nbsp;"{$text }"&nbsp;the name of the variable to substitute will include the space at the end, that is to say, it will be&nbsp;"text ".<br>Example of rigid blocks are&nbsp;<a data-href="Simple replacements" href="https://divengine.org/documentation/div-php-template-engine/features/simple-replacements.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Simple replacements</a>&nbsp;and&nbsp;<a data-href="Including another templates" href="https://divengine.org/documentation/div-php-template-engine/features/including-another-templates.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Including another templates</a>.<br><br><img alt="Pasted image 20240128115039.png" src="https://divengine.org/lib/media/pasted-image-20240128115039.png"><br><br>The simple blocks are similar to the rigid blocks, with the difference that the prefix is named "begin", the suffix is named "end", and the syntaxis of the block is flexible. A flexible syntax is the opposite to a rigid syntax, where it is allowed to write characters to space or to format. In this blocks, the aperture tag and the closing tag are required.<br>Example of simple blocks are&nbsp;<a data-href="Ignored parts (escaping Div parsing)" href="https://divengine.org/documentation/div-php-template-engine/features/ignored-parts-(escaping-div-parsing).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Ignored parts (escaping Div parsing)</a>, <a data-href="Comments" href="https://divengine.org/documentation/div-php-template-engine/features/comments.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Comments</a> and <a data-href="Strip or clean the resulting code" href="https://divengine.org/documentation/div-php-template-engine/features/strip-or-clean-the-resulting-code.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Strip or clean the resulting code</a><br><br><img alt="Pasted image 20240128115057.png" src="https://divengine.org/lib/media/pasted-image-20240128115057.png"><br><br>The blocks without keywords are those where the aperture tag and the closing tag have a structure or specific content, so that it is not necessary a prefix and a suffix for the closing tag. In this sense the prefix and the suffix of the aperture tag are required, and as well as the closing tag.<br>Example of no-keyword blocks are&nbsp;<a data-href="Conditions" href="https://divengine.org/documentation/div-php-template-engine/features/conditions.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Conditions</a> and <a data-href="Iterations" href="https://divengine.org/documentation/div-php-template-engine/features/iterations.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Iterations</a><br><br><img alt="Pasted image 20240128115123.png" src="https://divengine.org/lib/media/pasted-image-20240128115123.png"><br><br>The blocks with keywords are those where the aperture tag and the closing tag contain the name a variable, either simple or complex, accompanied by a prefix and a suffix in both cases. The prefix of the aperture tag and the suffix of the closing tag are required.<br>Example of keyword blocks are&nbsp;<a data-href="Conditional parts" href="https://divengine.org/documentation/div-php-template-engine/features/conditional-parts.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Conditional parts</a> and <a data-href="Lists (loops)" href="https://divengine.org/documentation/div-php-template-engine/features/lists-(loops).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Lists (loops)</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/understanding-the-syntax.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Understanding the syntax.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:51:25 GMT</pubDate><enclosure url="https://divengine.org/lib/media/pasted-image-20240128115015.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://divengine.org/lib/media/pasted-image-20240128115015.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Variable's modifiers]]></title><description><![CDATA[ 
 <br>Variable's modifiers allow you to change the value of a variable or obtain information about the value in the templates, so they change the way they are displayed, such as a text in capital letters, etc..<br>Syntax in templates:<br>The following variable's modifiers can be used with the current version of Div:<br><br>Example:<br>index.tpl<br>{= title: mozilla firefox =}
{= body: A wonderful web browser=} 

Nothing to change: 
{$title}

Capitalize the first character of the string: 
{^title}

Capitalize the first character of each word of the string: 
{^^title}

Convert the entire string to uppercase:
{^^^title}

Convert the entire string to lowercase: 
{_title}

Count of characters: 
{%title}

Sub-string:

{$body:0,11}

Truncate: 

{$body:~25}...

Word wrap: 

{$body:/30}

Combining the modifiers:

{^^^body:0,11}

{^^^body:/40}

String format:

{= value: 10 =}

{$value:%1$04d}
<br>Output:<br>Nothing to change: 
mozilla firefox

Capitalize the first character of the string: 
Mozilla firefox
	
Capitalize the first character of each word of the string: 
Mozilla Firefox
	
Convert to uppercase:
MOZILLA FIREFOX
	
Convert to lowercase: 
mozilla firefox
	
Count of characters: 
15
	
Sub-string:
web browser
	
Truncate: 
A wonderful...

Word wrap: 
A wonderful web browser


Combining the modifiers:
A WONDERFUL WEB BROWSER

A WONDERFUL

	
String format:
	
0010
<br><a data-href="Custom modifiers" href="https://divengine.org/documentation/div-php-template-engine/features/custom-modifiers.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Custom modifiers</a><br>
<a data-href="Multiple variable's modifiers" href="https://divengine.org/documentation/div-php-template-engine/features/multiple-variable's-modifiers.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Multiple variable's modifiers</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/variable's-modifiers.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Variable's modifiers.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:32:11 GMT</pubDate></item><item><title><![CDATA[Variables (information, content...)]]></title><description><![CDATA[ 
 <br>The designer doesn't have reason to know what are a data type to make their work. It should simply consider to the variables of the design as "the information". For this reason, in the templates, Div normalizes all the information coming from PHP, considering an array, objects or combination of arrays and objects as "same things".<br>The information represents a hierarchy. You can access to all thier "pieces" using the dot "." operator.<br>Example:<br>index.php<br>&lt;?php

/* This code... */

echo new div('index.tpl', [
	'single' =&gt; 'something',
	'complex' =&gt; [
		'single' =&gt; 45,
		'subcomplex' =&gt; [
			'single' =&gt; '60'
		]
	]
]);

/* ... is similar to ... */

$complex = (object) [
	'single' =&gt; 45,
	'subcomplex' =&gt; [ 'single' =&gt; 60 ]

];

echo new div('index.tpl', [
	'single' =&gt; 'something',
	'complex' =&gt; $complex
]);

<br>index.tpl<br>Single value: {$single}
Single value into complex var: {$complex.single}
And more: {$complex.subcomplex.single}
<br>Output<br>Single value: something
Single value into complex var: 45
And more: 60
<br><a data-href="String's dissection" href="https://divengine.org/documentation/div-php-template-engine/features/string's-dissection.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>String's dissection</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/features/variables-(information,-content...).html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Features/Variables (information, content...).md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:09:16 GMT</pubDate></item><item><title><![CDATA[Goals]]></title><description><![CDATA[ 
 <br>
<br>One class, one file! Considering the template as an object.
<br>Create a minimum of highly descriptive syntax.
<br>Avoid a caching system.
<br>Improve algorithms.
<br>Reuse knowledge, write mechanisms and extend!
<br>
]]></description><link>https://divengine.org/documentation/div-php-template-engine/introduction/goals.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Introduction/Goals.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:04:55 GMT</pubDate></item><item><title><![CDATA[Possibilities for the designer]]></title><description><![CDATA[ 
 <br>The designer carries out its work in text files and he can use different tags. Div does not provide for the design obtrusive code. All that is programmed in the templates has a single goal: design.<br>
<br>Replace tags
<br>Apply&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/docs/div-php-template-engine/introduction/possibilities-designer#variable-modifiers" rel="noopener nofollow" class="external-link" href="https://divengine.org/docs/div-php-template-engine/introduction/possibilities-designer#variable-modifiers" target="_blank">variable's modifiers</a>: uppercase, lowercase, word count, paragraph count, string length, URL encode, convert everything to HTML entities
<br>Working with substrings
<br>Loops, iterations, cycles or repetitive parts
<br>Parts of templates displayed conditionally
<br>Evaluation conditions
<br>Definition of variables
<br>Divide the design into parts and then include or pre-process it
<br>Formatting Numbers and Dates
<br>Working with Formulas
<br>Comments
<br>Position of content
<br>Recursion: the engine processes the template over and over again until there is nothing to process
<br>Mechanism for the inheritance among templates
<br>Ignoring parts of the template
<br>Access to any specific value of the information passed by the programmer
<br>Access to methods of information's objects
<br>Aggregate functions: sum, average, minimum, maximum, count on.
<br>Clean the output
<br>Convert HTML to readable text
<br>Using the custom&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/docs/div-php-template-engine/introduction/possibilities-designer#subparsers" rel="noopener nofollow" class="external-link" href="https://divengine.org/docs/div-php-template-engine/introduction/possibilities-designer#subparsers" target="_blank">subparsers</a>&nbsp;implemented by the programmer.
]]></description><link>https://divengine.org/documentation/div-php-template-engine/introduction/possibilities-for-the-designer.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Introduction/Possibilities for the designer.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:05:10 GMT</pubDate></item><item><title><![CDATA[Possibilities for the programmer]]></title><description><![CDATA[ 
 <br>The programmer creates an instance of div class, specifying in its constructor, the template created by the designer and the information that will be displayed.<br>
<br>Rename the div class
<br>Define default file extensions
<br>Div class inheritance and object-oriented programming
<br>Define variables
<br>Defining global variables
<br>Define replacement values per variable
<br>Load data from a JSON file
<br>Ignore information variables passed to the constructor of the div class
<br>Debug
<br>Use class div instance as a string
<br>Implement some hooks
]]></description><link>https://divengine.org/documentation/div-php-template-engine/introduction/possibilities-for-the-programmer.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Introduction/Possibilities for the programmer.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:05:50 GMT</pubDate></item><item><title><![CDATA[Reasons]]></title><description><![CDATA[ 
 <br>Div is developed with the philosophy of reused knowledge. Of course, Div is released at the time of the well-known template engines that are widely used. For this reason, Div develops a minimum of new knowledge so that developers can quickly become familiar with this engine and understand when, how and why to use it.<br>Features are added if really needed. That is, if there is a need to add other functionality, we first analyze whether there is a mechanism to resolve this functionality, and then publish an article explaining how to implement this mechanism.<br>The argument for developing Div was obtained from several tests with PHP and we concluded that it is faster to replace the parts of the string than scripts included in PHP.<br>The fact is that substring replacement is a fast process but requires more memory. However, this consumption is so small that it is worth the sacrifice.<br>The development of div is to avoid creating a caching system because we believe that it is unnecessary based on its characteristics as an engine. A learning system may be enough: it can avoid repeated processing of the same templates.<br>Finally, the most popular engines are known to be composed of more than one file, classes, and libraries. Div sought from its inception, the implementation of everything in a single class, in a single file. This allows easy adaptation to existing development platforms.]]></description><link>https://divengine.org/documentation/div-php-template-engine/introduction/reasons.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Introduction/Reasons.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:06:03 GMT</pubDate></item><item><title><![CDATA[Components]]></title><description><![CDATA[ 
 <br>Complex GUIs are created with components. A component can reduces the effort dedicated in the production. Create a component with Div and for Div, is a very simple mechanism to implement. See the next example:<br><br>combobox.tpl<br>&lt;select id="{$id}" name="{$name}"&gt;
		[${$options}]
		&lt;option value="{$val}"&gt;{$text}&lt;/option&gt;
		[/${$options}]
&lt;/select&gt;
<br>This component use:&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#simple-replacements" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#simple-replacements" target="_blank">simple replacements</a>,&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#lists" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#lists" target="_blank">lists</a>&nbsp;and&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#recursion" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#recursion" target="_blank">recursion</a>.<br><br>index.tpl<br>[[_empty
		{= id: "products" =}
		{= name: "products" =}
		{= options: "products" =}
		{% combobox %}
_empty]]
<br>"Use a component" means "<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#include" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#include" target="_blank">include</a>&nbsp;the component", for example, into a&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#capsules" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/components#capsules" target="_blank">capsule</a>, that can be the&nbsp;_empty&nbsp;variable.<br><br>index.php<br>&lt;?php
	
echo new div('index.tpl', [
		'products' =&gt; [
			['val' =&gt; 1, 'text' =&gt; 'Banana'],
			['val' =&gt; 2, 'text' =&gt; 'Potato'],
			['val' =&gt; 3, 'text' =&gt; 'Apple']
		]
]);
<br><br>&lt;select id="products" name="products"&gt;
	&lt;option value="1"&gt;Banana&lt;/option&gt;
	&lt;option value="2"&gt;Potato&lt;/option&gt;
	&lt;option value="3"&gt;Apple&lt;/option&gt;
&lt;/select&gt;
]]></description><link>https://divengine.org/documentation/div-php-template-engine/mechanisms/components.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Mechanisms/Components.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:54:25 GMT</pubDate></item><item><title><![CDATA[Recursion]]></title><description><![CDATA[ 
 <br>Div interprets the template until it is not anything to interpret. For that reason, the recursion is implicit and is an intrinsic characteristic of the eninge.<br>If you have a code like '{list}}' and&nbsp;$list = 'products'&nbsp;then the engine convert this code to '{$products}' and if you have another variable&nbsp;$products&nbsp;with your list of products, the engine replace it, in this example, with the count of products.<br>Low performance? No! The implementation of Div is not a recursive algorithm. The recursion is only a mechanism for the designer. Don't worry.<br>The recursion is very useful in the creation of&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/mechanisms/recursion#components" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/recursion#components" target="_blank">components</a>.&nbsp;<br>Example<br>index.php<br>&lt;?php
	
include 'div.php';
	
$product = new stdClass();
	
$product-&gt;name = 'Banana';
$product-&gt;price = 20.5;
	
echo new div('index.tpl', [
		'product' =&gt; $product,
		'object' =&gt; 'product'
]);
<br>index.tpl<br>Origin<br>[${$object}]
	
{$_key} = {$value}
	
[/${$object}]
<br>Step 1<br>[$product]
	
{$_key} = {$value}
	
[/$product]
<br>Step 2<br>[$product]
	
name = {$value}
	
[/$product]
<br>Step 3<br>[$product]
	
name = Banana
price = {$value}
	
[/$product]
<br>Step 4<br>name = Banana
price = 20.5
]]></description><link>https://divengine.org/documentation/div-php-template-engine/mechanisms/recursion.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Mechanisms/Recursion.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:55:07 GMT</pubDate></item><item><title><![CDATA[Templates inheritance]]></title><description><![CDATA[ 
 <br>The inheritance allows you to construct a base template that contains all the common elements and defines "zones" that other templates can change. At the moment Div doesn't provide the template inheritance explicitly. But we wonder if it is really necessary.<br>For those that don't know about this topic, the template inheritance means that a template can inherit the design of another template and then redesign the necessary parts.<br>The templates inheritance can be solved with inclusions in engines that don't provide the inheritance, but it can be a not very elegant solution. Does Div have some mechanism that can be considered a solution for the templates inheritance?<br>Div considers that the templates inheritance can be solved with some of their features, like as inclusions, default values, template vars, locations and recursion. This section explain three variants for implement the inheritance.<br><br>This way, when you write<br>{% block %}  <br>Or  <br>{% {$block} %}<br>the variable $block can have a default value and then this code can be include different templates. You can call this mechanism as&nbsp;"switch".<br><br>Another way to implement inheritance is using the template variables. In the parent template defines a block as it defines a template variable, then the variable positions in place of the template you want. In the child template redefines the "blocks" (<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/mechanisms/templates-inheritance#protected-template-vars" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/templates-inheritance#protected-template-vars" target="_blank">protected template's variables</a>) and then includes the parent template.<br>Example<br>parent.tpl<br>	... any code ...
{= block1:
	
... code of block 1 ...
	
=}
	
... another code...
	
{$block1}
<br>child.tpl<br>{= *block1:
	
	... another code for block 1 ...
	
=}
	
{% parent %}
<br><br>This is the most elegant solution because you not need to define a variable. In the parent template you define the locations of the common content (for example "top", "header", "footer", "left", "right", etc), and then in the child template you can locate contents in the parent's locations.<br>Example<br>parent.tpl<br>... any code ...
	
(( block1 ))
	
... another code...
	
{= parent_block1:
	
... code block 1 written by the parent ...
	
=}
<br>child.tpl<br>{% parent %}
	
{{block1
	
	{$parent_block1}
	
... The child's content ...
	
block1}}
<br>Output<br>... any code ...
	
... code block 1 written by the parent ...
... The child's content ...
	
... another code...
]]></description><link>https://divengine.org/documentation/div-php-template-engine/mechanisms/templates-inheritance.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Mechanisms/Templates inheritance.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:38:39 GMT</pubDate></item><item><title><![CDATA[Appendixes]]></title><description><![CDATA[ 
 <br><a data-href="Appendix A - Allowed PHP functions" href="https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-a-allowed-php-functions.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Appendix A - Allowed PHP functions</a><br>
<a data-href="Appendix B - Comparison of syntax of Smarty and Div" href="https://divengine.org/documentation/div-php-template-engine/appendixes/appendix-b-comparison-of-syntax-of-smarty-and-div.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Appendix B - Comparison of syntax of Smarty and Div</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/appendixes.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Appendixes.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:54:58 GMT</pubDate></item><item><title><![CDATA[Div PHP Template Engine]]></title><description><![CDATA[<a class="tag" href="https://divengine.org/?query=tag:templates" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#templates</a> 
 <br>div is a <a data-tooltip-position="top" aria-label="https://en.wikipedia.org/wiki/Template_processor" rel="noopener nofollow" class="external-link" href="https://en.wikipedia.org/wiki/Template_processor" target="_blank">template engine</a> and <a data-tooltip-position="top" aria-label="https://en.wikipedia.org/wiki/Code_generation_%28compiler%29" rel="noopener nofollow" class="external-link" href="https://en.wikipedia.org/wiki/Code_generation_%28compiler%29" target="_blank">code generator tool</a> tool written in <a data-tooltip-position="top" aria-label="http://php.net/" rel="noopener nofollow" class="external-link" href="http://php.net/" target="_blank">PHP</a> and developed since 2011, designed to optimize collaboration between developers and designers through generative programming, model-driven architecture, and meta-programming. This engine not only facilitates the separation of labor between roles but also allows for deep customization through the creation of tailored template <a data-tooltip-position="top" aria-label="https://dialector.divengine.org" rel="noopener nofollow" class="external-link" href="https://dialector.divengine.org" target="_blank">dialects</a> to meet specific project needs.<br>One of the most distinctive features of div is its ability to recursively process templates until there is no more code to process, effectively avoiding infinite loops and enabling complex, multi-step transformations. This translates into exceptional flexibility for dynamically generating content or code based on the data and logic specified in the templates.<br>Additionally, div supports the creation of custom template dialects, allowing users to define and modify the syntax to better suit different programming environments or to enhance code readability and maintenance. For example, it's possible to configure a dialect that ensures templates remain as valid XML, facilitating integration with other systems and technologies that utilize XML.<br>This engine is the cornerstone of <a data-tooltip-position="top" aria-label="https://divengine.com" rel="noopener nofollow" class="external-link" href="https://divengine.com" target="_blank">Divengine Software Solutions</a> and adheres to the philosophy of "build more with less" and "divide the problem, not the people." div proposes code generation based on templates that adhere to clear rules: the model contains all information about what is to be accomplished; the templates define the expected outcomes; and the engine, acting as a black box, takes care of the execution.<br>Basic operations include:<br>
<br>Compile: Combine a template with models and save the result.
<br>Transform: Convert one model to another, reusing the compile operation.
<br>Compose: Integrate different results using the engine and other tools.
<br>With div, developers and designers can avoid repetitive tasks, scale projects based on models, migrate projects to different technologies, and expand applications to other platforms and devices, all while improving application performance and enabling non-technical people to participate in the project's development.<br><br>composer require divengine/div
<br><br>composer upgrade
<br><a data-tooltip-position="top" aria-label="https://github.com/anuraghazra/github-readme-stats" rel="noopener nofollow" class="external-link" href="https://github.com/anuraghazra/github-readme-stats" target="_blank"></a><img alt="Readme Card" src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=div&amp;show_owner=true&amp;rand=23" referrerpolicy="no-referrer"><br><a data-href="Introduction to Div PHP Template Engine" href="https://divengine.org/documentation/div-php-template-engine/introduction-to-div-php-template-engine.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Introduction to Div PHP Template Engine</a><br>
<a data-href="The div class" href="https://divengine.org/documentation/div-php-template-engine/the-div-class.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>The div class</a><br>
<a data-href="The best practices" href="https://divengine.org/documentation/div-php-template-engine/the-best-practices.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>The best practices</a><br>
<a data-href="Template Engine Features" href="https://divengine.org/documentation/div-php-template-engine/template-engine-features.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Template Engine Features</a><br>
<a data-href="Method's reference" href="https://divengine.org/documentation/div-php-template-engine/method's-reference.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Method's reference</a><br>
<a data-href="Mechanisms" href="https://divengine.org/documentation/div-php-template-engine/mechanisms.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Mechanisms</a><br>
<a data-href="Appendixes" href="https://divengine.org/documentation/div-php-template-engine/appendixes.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Appendixes</a><br>Se also the <a data-href="CHANGELOG" href="https://divengine.org/documentation/div-php-template-engine/changelog/changelog.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>CHANGELOG</a> and the <a data-href="FUTURE" href="https://divengine.org/documentation/div-php-template-engine/future.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>FUTURE</a> or this project.<br><a href="https://divengine.org?query=tag:templates" class="tag" target="_blank" rel="noopener nofollow">#templates</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/div-php-template-engine.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Div PHP Template Engine.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 21 Jul 2024 00:35:12 GMT</pubDate><enclosure url="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=div&amp;show_owner=true&amp;rand=23" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=div&amp;show_owner=true&amp;rand=23"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[FUTURE FEATURES]]></title><description><![CDATA[ 
 <br><br><br><br><br>{strip}{$varname}{/strip}
(# trim("{$varname}") #)
<br><br>ltrim: {-varnme}
rtrim: {varname-}
trim: {-varname-}
trim: {trim:varname}
trim: {$varname:trim}
<br><br><br>// create subparser
function export($src, $items){
    $v = $items[$src];
    if (is_object($v))
    $v = get_object_vars($v);
    return str_replace("\n","",var_export($v, true));
}

div::setSubParser('export');
<br>{export}varname{/export}
<br><br><br><br>
<br>DIV_TAG_LOOP_ORDER for '_order' var in loops
<br>DIV_TAG_LOOP_INDEX for '_index' var in loops
<br>DIV_TAG_LOOP_KEY for '_key' var in loops
]]></description><link>https://divengine.org/documentation/div-php-template-engine/future.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/FUTURE.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 20 Jul 2024 23:02:18 GMT</pubDate></item><item><title><![CDATA[Ignore specific variables (the third parameter of constructor)]]></title><description><![CDATA[ 
 <br>If you want that the engine ignore some variables in template, specify the variables as a list of names in the third parameter of constructor:<br>/* Third parameter as array */
	
echo new div('index.tpl', ['name' =&gt; 'Peter'], ['name']);
	
/* Third parameter as string  */
	
echo new div('index.tpl',['name' =&gt; 'Peter', 'age' =&gt; 25, 'sex' =&gt; 'M'], 'name,age');
]]></description><link>https://divengine.org/documentation/div-php-template-engine/ignore-specific-variables-(the-third-parameter-of-constructor).html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Ignore specific variables (the third parameter of constructor).md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:06:58 GMT</pubDate></item><item><title><![CDATA[Introduction to Div PHP Template Engine]]></title><description><![CDATA[ 
 <br>Div is a [template] engine and [code generator tool] written in&nbsp;<a data-tooltip-position="top" aria-label="http://php.net/" rel="noopener nofollow" class="external-link" href="http://php.net/" target="_blank">PHP</a>&nbsp;and developed since 2011, that allows the separation of labor between developers and designers, and improve the software development based on [Generative Programming], [Model Driven Architecture] and [Meta programming].<br>As the designer or developer built templates with some specific tags, other developers or designers uses the template to replace these tags with data or more template code. Div have a compact, flexible and descriptive syntax for templates:<br>
<br>"compact" means "a minimum of code for template language"
<br>"flexible" means "you can create dialects of template language"
<br>"descriptive" means "template language talk by herself"
<br>This project is the main piece of the organization&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.com/" rel="noopener nofollow" class="external-link" href="https://divengine.com/" target="_blank">Div Software Solutions</a>, following the philosophy of "build more with less" and "divide the problem and not to the people". To obtain this goal, Div propose the [code generation based on templates], following this rules:<br>
<br>The&nbsp;model&nbsp;will have all information about&nbsp;"what do you want to do"
<br>The&nbsp;templates&nbsp;will have all information about&nbsp;"what results you expect"
<br>The&nbsp;engine&nbsp;if the black-box that achieve the&nbsp;"how to make it".
<br>Then, exists these basics operations:<br>
<br>Operation #1.&nbsp;Compile&nbsp;a template with models and save the result
<br>Operation #2.&nbsp;Transform&nbsp;a model to another, reusing Operation #1.
<br>Operation #3.&nbsp;Compose&nbsp;different results, using the engine and other tools.
<br>When you have white these rules, then you will be able to use your imagination and you will be able to achieve the following results, and any combination of them:<br>
<br>Avoid repetitive tasks in the programming
<br>Save your models and reuse them in another project
<br>Scaling your project based in your models.
<br>Migrate your project to different technology
<br>Take advantage of your models and develop parallel versions
<br>Expand your application in other platforms and devices
<br>Improve the performance of your application
<br>Make a documentation of your work
<br>Involve the "non technician" people in the development of the project
<br><a data-href="Goals" href="https://divengine.org/documentation/div-php-template-engine/introduction/goals.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Goals</a><br>
<a data-href="Possibilities for the designer" href="https://divengine.org/documentation/div-php-template-engine/introduction/possibilities-for-the-designer.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Possibilities for the designer</a><br>
<a data-href="Possibilities for the programmer" href="https://divengine.org/documentation/div-php-template-engine/introduction/possibilities-for-the-programmer.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Possibilities for the programmer</a><br>
<a data-href="Reasons" href="https://divengine.org/documentation/div-php-template-engine/introduction/reasons.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Reasons</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/introduction-to-div-php-template-engine.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Introduction to Div PHP Template Engine.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 16:06:16 GMT</pubDate></item><item><title><![CDATA[Mechanisms]]></title><description><![CDATA[ 
 <br><a data-href="Components" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/components.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Components</a><br>
<a data-href="Recursion" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/recursion.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Recursion</a><br>
<a data-href="Templates inheritance" href="https://divengine.org/documentation/div-php-template-engine/mechanisms/templates-inheritance.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Templates inheritance</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/mechanisms.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Mechanisms.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Mon, 29 Jan 2024 18:04:38 GMT</pubDate></item><item><title><![CDATA[Method's reference]]></title><description><![CDATA[ 
 <br><br>div::addCustomModifier(string&nbsp;$prefix,&nbsp;string&nbsp;$function)<br>Add a&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/methodss-reference#custom-modifiers" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/methodss-reference#custom-modifiers" target="_blank">custom variable's modifier</a>. The modifier function should have a single parameter.<br>div::asThis(mixed&nbsp;$mixed)<br>Return mixed value as HTML format, (util for debug and fast presentation)<br>div::atLeastOneString(string&nbsp;$haystack,&nbsp;array&nbsp;$needles)<br>Return true if at least one needle is contained in the haystack<br>div::delDefault(mixed&nbsp;$search)<br>Remove a default replacement<br>div::delDefaultByVar(string&nbsp;$var,&nbsp;mixed&nbsp;$search)<br>Remove a default replacement for specific variable<br>div::delGlobal(string&nbsp;$var)<br>Remove a global var<br>div::disableSystemVar(string&nbsp;$var)<br>Disable&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/methodss-reference#system-vars" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/methodss-reference#system-vars" target="_blank">system var</a>&nbsp;for performance<br>div::enableSystemVar(string&nbsp;$var)<br>Enable&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/methodss-reference#system-vars" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/methodss-reference#system-vars" target="_blank">system var</a>&nbsp;for utility<br>div::error(string&nbsp;$errmsg,&nbsp;string&nbsp;$level = 'WARNING')<br>Show error and die<br>div::fileExists(string&nbsp;$filename)<br>Secure 'file exists' method<br>div::getLastKeyOfArray(array&nbsp;$arr)<br>Return the last key of array or null if not exists<br>div::getCountOfParagraphs(string&nbsp;$text)<br>Count a number of paragraphs in a text<br>div::getCountOfSentences(string&nbsp;$text)<br>Count a number of sentences in a text<br>div::getCountOfWords(string&nbsp;$text)<br>Count a number of words in a text<br>div::getDefault(mixed&nbsp;$value)<br>Return a default replacement of value<br>div::getDefaultByVar(string&nbsp;$var,&nbsp;mixed&nbsp;$value)<br>Return a default replacement of value by var<br>div::getSystemData()<br>Return the&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/methodss-reference#system-vars" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/methodss-reference#system-vars" target="_blank">loaded data from the system</a><br>div::getVarsFromCode(string&nbsp;$code)<br>Return a list of vars from PHP code<br>div::haveVarsThisCode(string&nbsp;$code)<br>Return true if the PHP code have any var<br>div::htmlToText(string&nbsp;$html,&nbsp;integer&nbsp;$width = 50)<br>Convert HTML to plain and formated text<br>div::isArrayOfArray(array&nbsp;$arr)<br>Return true if $arr is array of array<br>div::isArrayOfObjects(array&nbsp;$arr)<br>Return true if $arr is array of objects<br>div::isCli()<br>Return true if the script was executed in the CLI enviroment<br>div::isNumericList(array&nbsp;$arr)<br>Return true if $arr is array of numbers<br>div::isValidExpression(string&nbsp;$code)<br>Check if code is a valid expression<br>div::isDir(string&nbsp;$dirname)<br>Secure 'is_dir' method<br>div::isString(mixed&nbsp;$valur)<br>Secure 'is_string' method<br>div::jsonDecode(string&nbsp;$str)<br>JSON Decode<br>div::jsonEncode(mixed&nbsp;$data)<br>JSON Encode<br>div::log(string&nbsp;$msg,&nbsp;string&nbsp;$level = ' ')<br>Write a message in the log file<br>div::logOn(string&nbsp;$logfile)<br>Activate the debug mode for Div and write the logs into $logfile.<br>div::mixedBool(mixed&nbsp;$value)<br>Return any value as a boolean<br>div::setAllowedFunction({$src} $funcname)<br>Allow a function for the&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/documentation/div-php-template-engine/methodss-reference#formulas" rel="noopener nofollow" class="external-link" href="https://divengine.org/documentation/div-php-template-engine/methodss-reference#formulas" target="_blank">formulas</a><br>div::setDefault(mixed&nbsp;$search,&nbsp;mixed&nbsp;$replace)<br>Add or set a default replacement of value<br>div::setDefaultByVar(string&nbsp;$var,&nbsp;mixed&nbsp;$search,&nbsp;mixed&nbsp;$replace,&nbsp;bool&nbsp;$update = true)<br>Add or set a default replacement of value for a specific var<br>div::unsetAllowedFunction(string&nbsp;$funcname)<br>Unset the allowed function<br>div::utf162utf8(string&nbsp;$utf16)<br>Convert string from UTF16 to UTF18<br>div::varExists(string&nbsp;$var,&nbsp;mixed&nbsp;&amp;$items = null)<br>Return true if var exists in the template's items recursively]]></description><link>https://divengine.org/documentation/div-php-template-engine/method's-reference.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Method's reference.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 15:49:07 GMT</pubDate></item><item><title><![CDATA[Noteworthy Issues]]></title><description><![CDATA[ 
 <br>Explore the following list of noteworthy issues that have been addressed or are currently under discussion. These issues are significant and have played a crucial role in shaping the development and improvement of the project. Click on the links below to dive into the details of each issue<br>
<br><a rel="noopener nofollow" class="external-link" href="https://github.com/divengine/div/issues/7" target="_blank">https://github.com/divengine/div/issues/7</a> 
]]></description><link>https://divengine.org/documentation/div-php-template-engine/noteworthy-issues.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Noteworthy Issues.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Mon, 12 Feb 2024 19:29:49 GMT</pubDate></item><item><title><![CDATA[Template Engine Features]]></title><description><![CDATA[ 
 <br><a data-href="Variables (information, content...)" href="https://divengine.org/documentation/div-php-template-engine/features/variables-(information,-content...).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Variables (information, content...)</a><br>
<a data-href="Simple replacements" href="https://divengine.org/documentation/div-php-template-engine/features/simple-replacements.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Simple replacements</a><br>
<a data-href="Special replacements" href="https://divengine.org/documentation/div-php-template-engine/features/special-replacements.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Special replacements</a><br>
<a data-href="Variable's modifiers" href="https://divengine.org/documentation/div-php-template-engine/features/variable's-modifiers.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Variable's modifiers</a><br>
<a data-href="Data formats" href="https://divengine.org/documentation/div-php-template-engine/features/data-formats.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Data formats</a><br>
<a data-href="Formulas" href="https://divengine.org/documentation/div-php-template-engine/features/formulas.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Formulas</a><br>
<a data-href="Ignored parts (escaping Div parsing)" href="https://divengine.org/documentation/div-php-template-engine/features/ignored-parts-(escaping-div-parsing).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Ignored parts (escaping Div parsing)</a><br>
<a data-href="Comments" href="https://divengine.org/documentation/div-php-template-engine/features/comments.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Comments</a><br>
<a data-href="Capsules" href="https://divengine.org/documentation/div-php-template-engine/features/capsules.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Capsules</a><br>
<a data-href="HTML to plain text" href="https://divengine.org/documentation/div-php-template-engine/features/html-to-plain-text.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>HTML to plain text</a><br>
<a data-href="Lists (loops)" href="https://divengine.org/documentation/div-php-template-engine/features/lists-(loops).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Lists (loops)</a><br>
<a data-href="Iterations" href="https://divengine.org/documentation/div-php-template-engine/features/iterations.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Iterations</a><br>
<a data-href="Conditional parts" href="https://divengine.org/documentation/div-php-template-engine/features/conditional-parts.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Conditional parts</a><br>
<a data-href="Conditions" href="https://divengine.org/documentation/div-php-template-engine/features/conditions.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Conditions</a><br>
<a data-href="Global vars" href="https://divengine.org/documentation/div-php-template-engine/features/global-vars.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Global vars</a><br>
<a data-href="Aggregate functions" href="https://divengine.org/documentation/div-php-template-engine/features/aggregate-functions.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Aggregate functions</a><br>
<a data-href="Dialects" href="https://divengine.org/documentation/div-php-template-engine/features/dialects.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Dialects</a><br>
<a data-href="Friendly tags" href="https://divengine.org/documentation/div-php-template-engine/features/friendly-tags.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Friendly tags</a><br>
<a data-href="Sub-parsers" href="https://divengine.org/documentation/div-php-template-engine/features/sub-parsers.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Sub-parsers</a><br>
<a data-href="Including another templates" href="https://divengine.org/documentation/div-php-template-engine/features/including-another-templates.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Including another templates</a><br>
<a data-href="Default replacements" href="https://divengine.org/documentation/div-php-template-engine/features/default-replacements.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Default replacements</a><br>
<a data-href="Including pre-processed templates" href="https://divengine.org/documentation/div-php-template-engine/features/including-pre-processed-templates.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Including pre-processed templates</a><br>
<a data-href="Locations" href="https://divengine.org/documentation/div-php-template-engine/features/locations.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Locations</a><br>
<a data-href="Macros" href="https://divengine.org/documentation/div-php-template-engine/features/macros.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Macros</a><br>
<a data-href="Multi replacements" href="https://divengine.org/documentation/div-php-template-engine/features/multi-replacements.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Multi replacements</a><br>
<a data-href="Object Oriented Programming" href="https://divengine.org/documentation/div-php-template-engine/features/object-oriented-programming.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Object Oriented Programming</a><br>
<a data-href="Strip or clean the resulting code" href="https://divengine.org/documentation/div-php-template-engine/features/strip-or-clean-the-resulting-code.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Strip or clean the resulting code</a><br>
<a data-href="System vars" href="https://divengine.org/documentation/div-php-template-engine/features/system-vars.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>System vars</a><br>
<a data-href="Template's documentation" href="https://divengine.org/documentation/div-php-template-engine/features/template's-documentation.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Template's documentation</a><br>
<a data-href="Template's properties" href="https://divengine.org/documentation/div-php-template-engine/features/template's-properties.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Template's properties</a><br>
<a data-href="Template's variables" href="https://divengine.org/documentation/div-php-template-engine/features/template's-variables.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Template's variables</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/template-engine-features.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/Template Engine Features.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 16:03:15 GMT</pubDate></item><item><title><![CDATA[The best practices]]></title><description><![CDATA[ 
 <br>
<br>The design should not "guess" the content: The developers in occasions give this task to the template, and they obtain content using the possibilities of the language of templates, when in fact this it is the programmer's task. For example, it is an error to calculate in the template the amounts of the products of an invoice and the total amount, although this it can seem an example of the use of&nbsp;<a data-tooltip-position="top" aria-label="https://divengine.org/docs/div-php-template-engine/best-practices#aggregate-functions" rel="noopener nofollow" class="external-link" title="Go to section related to: aggregate functions" href="https://divengine.org/docs/div-php-template-engine/best-practices#aggregate-functions" target="_blank"><strong></strong></a>aggregate functions. The language of templates is not conceived to obtain the lacking information, but to make a good design.
<br>The design should be very wrapped to the content and vice versa: Try to balance the content built in the programming, with the content manipulated in the template, so that it doesn't have more than enough content, which the motor has to discard, neither have more than enough template code, which the motor also ends ignoring.
<br>Divide the design as much as it is possible and not so much that it is absurd: Try to build the templates so that they complete the smallest quantity in objectives and that they are the smallest possible, and therefore reusable. Don't build big templates with many conditions where most is discarded. The developers sometimes mix the templates some with other, to have everything in a file and this diminishes the performance of the project. For example, it is not good practice to have two templates in one, prepared for two different contents separated by a since condition this implies to have another decision variable. If you have not found another solution, divide the template in two parts, make a third and use the inclusions or the pre-processed templates. But remember, it is not good practice to have an isolated template that it is included and always for one template, and therefore it is not reused neither conditionally loaded.
]]></description><link>https://divengine.org/documentation/div-php-template-engine/the-best-practices.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/The best practices.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:07:48 GMT</pubDate></item><item><title><![CDATA[The div class]]></title><description><![CDATA[ 
 <br>All implementation of Div is the&nbsp;div&nbsp;class and different forms exist of using it.&nbsp;If you have another class named "div", you can rename the div class.<br>First, include the div.php file:<br>&lt;?php

include "div.php";

// or using composer

include "path/to/vendor/autoload.php";

// div class is inside the "divengine" namespace

use divengine\div;
<br>Variant 1: All in one instruction<br>echo new div('Hello {$name}', [
	'name' =&gt; 'Peter'
]);
<br>Variant 2: First instance, then show<br>
$t = new div('Hello {$name}', ['name' =&gt; 'Peter']);
	
echo $t; /* or $t-&gt;show(); */
<br>Variant 3: The template in external file<br>
/* The file index.tpl contain the template code */
 
echo new div('index.tpl', ['name' =&gt; 'Peter']);
<br>Variant 4: The data as JSON code<br>
echo new div('Hello {$name}', '{name: "Peter"}');

<br>Variant 5: The data in JSON file<br>/* The file index.json contain the data as JSON code */

echo new div('index.tpl', 'index.json');
<br><a data-href="Ignore specific variables (the third parameter of constructor)" href="https://divengine.org/documentation/div-php-template-engine/ignore-specific-variables-(the-third-parameter-of-constructor).html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Ignore specific variables (the third parameter of constructor)</a>]]></description><link>https://divengine.org/documentation/div-php-template-engine/the-div-class.html</link><guid isPermaLink="false">Documentation/Div PHP Template Engine/The div class.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:07:17 GMT</pubDate></item><item><title><![CDATA[Call a static method]]></title><description><![CDATA[ 
 <br>app/control/Home.php<br>&lt;?php

#id = home
#listen = /home

class Home {
	
	static function Run()
	{
	    echo "Hello world";
	}
		
	static function About()
	{
		echo "About us";
	}
	
	#listen@Contact = get://about
	static function Contact()
	{
		echo "Contact us";
	}
}
<br>index.php<br>&lt;?php

// register a controller with the default static method ::Run()
ways::register("app/control/Home.php");

// route to another static method ([controllerID]@[method])
ways::listen("/about", "home@About");

// route to closure
ways::listen("/sayMeHello/{name}", function($data, $args) {
	echo "Hello {$args['name']}";	
});

// hook on the fly
ways::hook(DIV_WAYS_BEFORE_RUN, 
	ways::listen("/tests/...", function(){
		
		ways::listen("/tests/1", function(){
			echo "This is the test 1";
		}); 	
		
		ways::listen("/tests/2", function(){
			echo "This is the test 2";
		});
		
		if (ways::match("/tests/3")) {
			echo "This is the test 3";
		}
		
		ways::bootstrap();
	}), 
	function(){
		if (!isset($_SESSION['user']))
		{
			echo "You are not a tester";
			return false;
		}
		return true;
	});

// route to a static method
ways::bootstrap("_url", "home");
<br>.htaccess<br>RewriteEngine On
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^((?s).*)$ index.php?_url=/$1 [QSA,L]
]]></description><link>https://divengine.org/documentation/div-php-ways/call-a-static-method.html</link><guid isPermaLink="false">Documentation/Div PHP Ways/Call a static method.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 16 Mar 2024 18:24:32 GMT</pubDate></item><item><title><![CDATA[CLI app]]></title><description><![CDATA[ 
 <br>&lt;?php

// say me hello
// $ php one_script.php hello Peter
ways::listen("/hello/{name}", function ($data = [], $args = []) {
	echo "Hello {$args['name']}\n";
});
]]></description><link>https://divengine.org/documentation/div-php-ways/cli-app.html</link><guid isPermaLink="false">Documentation/Div PHP Ways/CLI app.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:00:27 GMT</pubDate></item><item><title><![CDATA[Div PHP Ways]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://github.com/anuraghazra/github-readme-stats" rel="noopener nofollow" class="external-link" href="https://github.com/anuraghazra/github-readme-stats" target="_blank"></a><img alt="Readme Card" src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=ways&amp;show_owner=true&amp;rand=23" referrerpolicy="no-referrer"><br><a data-href="Introduction to Div PHP Ways" href="https://divengine.org/documentation/div-php-ways/introduction-to-div-php-ways.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Introduction to Div PHP Ways</a><br>
<a data-href="Documentation/Div PHP Ways/Getting started" href="https://divengine.org/documentation/div-php-ways/getting-started.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Documentation/Div PHP Ways/Getting started</a><br>
<a data-href="Call a static method" href="https://divengine.org/documentation/div-php-ways/call-a-static-method.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Call a static method</a><br>
<a data-href="CLI app" href="https://divengine.org/documentation/div-php-ways/cli-app.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>CLI app</a><br>
<a data-href="Get controller properties" href="https://divengine.org/documentation/div-php-ways/get-controller-properties.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Get controller properties</a>]]></description><link>https://divengine.org/documentation/div-php-ways/div-php-ways.html</link><guid isPermaLink="false">Documentation/Div PHP Ways/Div PHP Ways.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 16 Mar 2024 18:23:38 GMT</pubDate><enclosure url="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=ways&amp;show_owner=true&amp;rand=23" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=divengine&amp;repo=ways&amp;show_owner=true&amp;rand=23"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Get controller properties]]></title><description><![CDATA[ 
 <br>&lt;?php

$property = "This is a property value";

ways::listen("/", function ($data = [], $args = [], $properties = []) {
	echo "Controller ID = " . $properties['id'] . "\n";
	echo "A controller property = " . $properties['myProperty'];

}, [
	'myProperty' =&gt; $property,
]);
]]></description><link>https://divengine.org/documentation/div-php-ways/get-controller-properties.html</link><guid isPermaLink="false">Documentation/Div PHP Ways/Get controller properties.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 14:00:46 GMT</pubDate></item><item><title><![CDATA[Getting started]]></title><description><![CDATA[ 
 <br><br>With composer...<br>composer require divengine/ways
<br>Without composer, download the class and...<br>include "path/to/divengine/ways.php";
<br><br>&lt;?php

// arbitrary location for software's packages
define('PACKAGES', 'path/to/app/');

use divengine\ways;

// ways with closure
ways::listen("get://home", function($data){
	echo "Hello {$data['user']}";
}, "home");

// add a hook
ways::hook(DIV_WAYS_BEFORE_RUN, "home", function($data){
	$data['user'] = "Peter";
});

// listen... 
$data = ways::bootstrap('_url', 'home');
]]></description><link>https://divengine.org/documentation/div-php-ways/getting-started.html</link><guid isPermaLink="false">Documentation/Div PHP Ways/Getting started.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sun, 28 Jan 2024 13:59:30 GMT</pubDate></item><item><title><![CDATA[Introduction to Div PHP Ways]]></title><description><![CDATA[ 
 <br><img alt="Div PHP Ways Overview.png" src="https://divengine.org/lib/media/div-php-ways-overview.png"><br>
A "way" is different to a "route". We need a path for found a specific resource, but we need a way for do something. This library follow this concept when implements the routing and control of PHP application.<br>Ways is a class that adapts the concept of SOA to the architecture of a PHP application, and tries to integrate the parts of a hybrid system.<br>With Ways you should think more about "control points" than on controllers of an MVC pattern. Control points are activated when they are needed, ie on demand, depending on the definition you have made.<br>In addition to this, a control point may require the previous execution of another control point. You can also implement events or hooks, so you can execute one control point before or after another, without the latter knowing the existence of the first. These flexibilities are valid for example in a plugins architecture.<br>The control points can interact, and this means, redirect the flow to another, call control points directly, exchange data and url arguments, handle the output on screen, etc.<br>Div Ways is not only intended for the web but also for command line applications. Div Ways is implemented in a single class, in a single file. This allows quick start-up and easy adaptation with other platforms.]]></description><link>https://divengine.org/documentation/div-php-ways/introduction-to-div-php-ways.html</link><guid isPermaLink="false">Documentation/Div PHP Ways/Introduction to Div PHP Ways.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Wed, 31 Jan 2024 04:11:08 GMT</pubDate><enclosure url="https://divengine.org/lib/media/div-php-ways-overview.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://divengine.org/lib/media/div-php-ways-overview.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Documentation]]></title><description><![CDATA[ 
 <br>
<br><a data-href="Div PHP Template Engine" href="https://divengine.org/documentation/div-php-template-engine/div-php-template-engine.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Div PHP Template Engine</a>
<br><a data-href="Div PHP Ajax Mapping" href="https://divengine.org/documentation/div-php-ajax-mapping/div-php-ajax-mapping.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Div PHP Ajax Mapping</a>
<br><a data-href="Div PHP Enum Solution" href="https://divengine.org/documentation/div-php-enum-solution/div-php-enum-solution.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Div PHP Enum Solution</a>
<br><a data-href="Div PHP Ways" href="https://divengine.org/documentation/div-php-ways/div-php-ways.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Div PHP Ways</a>
<br><a data-href="Div PHP ORM" href="https://divengine.org/documentation/div-php-orm/div-php-orm.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Div PHP ORM</a>
<br><a data-href="Div PHP Matrix" href="https://divengine.org/documentation/div-php-matrix/div-php-matrix.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Div PHP Matrix</a>
]]></description><link>https://divengine.org/documentation/documentation.html</link><guid isPermaLink="false">Documentation/Documentation.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Tue, 30 Jan 2024 22:23:11 GMT</pubDate></item><item><title><![CDATA[The Div Dialect Creator Tool]]></title><description><![CDATA[ 
 <br><br>You can create infinite dialects for the template language of Div PHP Template Engine. This tool help you for this goal.<br><a data-tooltip-position="top" aria-label="https://divengine.org/tools/dialector" rel="noopener nofollow" class="external-link" href="https://divengine.org/tools/dialector" target="_blank">https://divengine.org/tools/dialector/index.html</a>]]></description><link>https://divengine.org/tools/dialector.html</link><guid isPermaLink="false">Tools/Dialector.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Wed, 29 Jan 2025 13:04:56 GMT</pubDate></item><item><title><![CDATA[Tools]]></title><description><![CDATA[ 
 <br>
<br><a data-href="Dialector" href="https://divengine.org/tools/dialector.html" class="internal-link" target="_self" rel="noopener nofollow">Dialector</a>
]]></description><link>https://divengine.org/tools/tools.html</link><guid isPermaLink="false">Tools/Tools.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Wed, 31 Jan 2024 04:13:48 GMT</pubDate></item><item><title><![CDATA[Div PHP Matrix - Basic features]]></title><description><![CDATA[ 
 <br><br>Welcome to the fundamentals of <a data-href="Div PHP Matrix" href="https://divengine.org/documentation/div-php-matrix/div-php-matrix.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Div PHP Matrix</a>! In this video, we'll explore the core functionalities of this dynamic matrix manipulation class in PHP. Learn how to effortlessly retrieve and store values in cells, add new columns and rows to your matrices, and witness the magic of dynamic and automatic cell calculations. ]]></description><link>https://divengine.org/videos/div-php-matrix-basic-features.html</link><guid isPermaLink="false">Videos/Div PHP Matrix - Basic features.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 24 Feb 2024 02:21:13 GMT</pubDate></item><item><title><![CDATA[Videos]]></title><description><![CDATA[ 
 <br>
<br><a data-href="Div PHP Matrix - Basic features" href="https://divengine.org/videos/div-php-matrix-basic-features.html" class="internal-link" target="_self" rel="noopener nofollow">Div PHP Matrix - Basic features</a>
]]></description><link>https://divengine.org/videos/videos.html</link><guid isPermaLink="false">Videos/Videos.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 24 Feb 2024 02:21:13 GMT</pubDate></item><item><title><![CDATA[Divengine Open Source]]></title><description><![CDATA[ 
 <br><a href="https://stardev.io/developers/divengine" target="_blank" rel="noopener nofollow"></a><img src="https://stardev.io/developers/divengine/badge/languages/global.svg" alt="Check out divengine's profile on stardev.io" referrerpolicy="no-referrer"><br>Welcome to Divengine Open Source, a specialized initiative of <a data-tooltip-position="top" aria-label="https://divengine.com" rel="noopener nofollow" class="external-link" href="https://divengine.com" target="_blank">Divengine Software Solutions</a>, where innovation meets community. Based in Suriname, our company is dedicated to developing and sharing advanced software solutions. This division champions the spirit of collaboration by providing open-access projects that empower developers and promote the growth of open technologies.<br>On divengine.org, you will discover a variety of projects, each crafted with the principles of open development. This site acts as a gateway to our resources, offering a transparent and dynamic environment for innovation. Here, we merge transparency, creativity, and community engagement to develop solutions that are effective and widely accessible.<br>Join our quest to advance technology through shared knowledge, creating tools that everyone can use, modify, and share. Explore, contribute, and evolve with us.<br>
<br><a data-href="Documentation" href="https://divengine.org/documentation/documentation.html" class="internal-link" target="_self" rel="noopener nofollow"><span class="iconize-icon-in-link" title="FasBook" aria-label="FasBook" data-icon="FasBook" aria-hidden="true" style="transform: translateY(20%);"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" fill="currentColor" width="16px" height="16px"><!--! Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License) Copyright 2023 Fonticons, Inc. --><path d="M96 0C43 0 0 43 0 96V416c0 53 43 96 96 96H384h32c17.7 0 32-14.3 32-32s-14.3-32-32-32V384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H384 96zm0 384H352v64H96c-17.7 0-32-14.3-32-32s14.3-32 32-32zm32-240c0-8.8 7.2-16 16-16H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16zm16 48H336c8.8 0 16 7.2 16 16s-7.2 16-16 16H144c-8.8 0-16-7.2-16-16s7.2-16 16-16z"></path></svg></span>Documentation</a>
<br><a data-href="Tools" href="https://divengine.org/tools/tools.html" class="internal-link" target="_self" rel="noopener nofollow">Tools</a>
<br><a data-href="Videos" href="https://divengine.org/videos/videos.html" class="internal-link" target="_self" rel="noopener nofollow">Videos</a>
]]></description><link>https://divengine.org/index.html</link><guid isPermaLink="false">index.md</guid><dc:creator><![CDATA[Divengine Software Solutions]]></dc:creator><pubDate>Sat, 13 Jul 2024 18:14:28 GMT</pubDate><enclosure url="https://stardev.io/developers/divengine/badge/languages/global.svg" length="0" type="image/svg+xml"/><content:encoded>&lt;figure&gt;&lt;img src="https://stardev.io/developers/divengine/badge/languages/global.svg"&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>